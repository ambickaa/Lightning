[
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\ContextAware_Sample\\ContextAware_SampleController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\ContextAware_Sample\\ContextAware_SampleHelper.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\ContextAware_Sample\\ContextAware_SampleRenderer.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\FR_CMP_RecentTouchPoints\\FR_CMP_RecentTouchPointsController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\FR_CMP_RecentTouchPoints\\FR_CMP_RecentTouchPointsHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 13,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Error');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\FR_CMP_Touch_Point_Screen\\FR_CMP_Touch_Point_ScreenController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 22,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log('**************'+component.get(\"v.accId\"));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 47,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(accountId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 48,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('**************'+component.get(\"v.accId\"));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 52,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Page Refresh');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\FR_CMP_Touch_Point_Screen\\FR_CMP_Touch_Point_ScreenHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 3,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"Inside create touch\");"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 12,
                "column": 89,
                "nodeType": "BinaryExpression",
                "source": "        if( $A.localizationService.isBefore(startDateTime,endDateTime) && startDateTime != endDateTime) {"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 15,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log('Timezone based Error'+startDateTime+'End date'+endDateTime);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 35,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log(message);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 36,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log(\"message\" + message);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 64,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"followDate\" + followDate1);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 65,
                "column": 24,
                "nodeType": "BinaryExpression",
                "source": "        if(followDate1 == ''){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 66,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log(\"Inside null\");"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 70,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"touchPointReason\" + touchPointReason);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 87,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"Inside showPop\" + message);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 88,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"Inside showPop\" + accId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 93,
                "column": 32,
                "nodeType": "MemberExpression",
                "source": "                               console.log('pop');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\FR_DealerRADLTerritoryStructure\\FR_DealerRADLTerritoryStructureController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\FR_DealerRADLTerritoryStructure\\FR_DealerRADLTerritoryStructureHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 5,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('crop--------'+crop+'season============'+season);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 13,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Success');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 18,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('JSON.parse---------------'+JSON.stringify(JSON.parse(radlCoverage[2])));"
            },
            {
                "ruleId": "no-shadow",
                "severity": 2,
                "message": "'season' is already declared in the upper scope.",
                "line": 19,
                "column": 21,
                "nodeType": "Identifier",
                "source": "                var season = JSON.parse(radlCoverage[0]);"
            },
            {
                "ruleId": "no-shadow",
                "severity": 2,
                "message": "'crop' is already declared in the upper scope.",
                "line": 20,
                "column": 21,
                "nodeType": "Identifier",
                "source": "                var crop = JSON.parse(radlCoverage[1]);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 21,
                "column": 52,
                "nodeType": "BinaryExpression",
                "source": "                if(component.get(\"v.isInitialize\") == false){"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'i' is already defined",
                "line": 33,
                "column": 33,
                "nodeType": "Identifier",
                "source": "                        for(var i=0;i< crop.length;i++){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 50,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Error occured');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\FR_SalesRep_DashboardHeader\\FR_SalesRep_DashboardHeaderController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\FR_SalesRep_DashboardHeader\\FR_SalesRep_DashboardHeaderHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 5,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('crop--------'+crop+'season============'+season);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 13,
                "column": 5,
                "nodeType": "MemberExpression",
                "source": "\t\t\t\tconsole.log('Success');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 18,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('JSON.parse---------------'+JSON.stringify(JSON.parse(radlCoverage[2])));"
            },
            {
                "ruleId": "no-shadow",
                "severity": 2,
                "message": "'season' is already declared in the upper scope.",
                "line": 19,
                "column": 21,
                "nodeType": "Identifier",
                "source": "                var season = JSON.parse(radlCoverage[0]);"
            },
            {
                "ruleId": "no-shadow",
                "severity": 2,
                "message": "'crop' is already declared in the upper scope.",
                "line": 20,
                "column": 21,
                "nodeType": "Identifier",
                "source": "                var crop = JSON.parse(radlCoverage[1]);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 21,
                "column": 52,
                "nodeType": "BinaryExpression",
                "source": "                if(component.get(\"v.isInitialize\") == false){"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'i' is already defined",
                "line": 28,
                "column": 25,
                "nodeType": "Identifier",
                "source": "                for(var i=0;i< crop.length;i++){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 39,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Error occured');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_Account_AddressInformation\\Frontier_Account_AddressInformationController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_Account_AddressInformation\\Frontier_Account_AddressInformationHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 15,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log(\"accountCommResult::\" + retResponse);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 20,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log(\"Error Occured\");"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_AccountAndSalesStackedBar\\Frontier_AccountAndSalesStackedBarController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_AccountAndSalesStackedBar\\Frontier_AccountAndSalesStackedBarHelper.js",
        "result": [
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 5,
                "column": 37,
                "nodeType": "BinaryExpression",
                "source": "        component.set(\"v.Crop\",crop == undefined ? 'All Crops' :crop);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 7,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('crop--------'+crop+'season============'+season+'programType-----------'+programType);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 17,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Success');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 24,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('JSON.parse---------------'+JSON.stringify(JSON.parse(radlCoverage[2])));"
            },
            {
                "ruleId": "no-shadow",
                "severity": 2,
                "message": "'season' is already declared in the upper scope.",
                "line": 25,
                "column": 21,
                "nodeType": "Identifier",
                "source": "                var season = JSON.parse(radlCoverage[0]);"
            },
            {
                "ruleId": "no-shadow",
                "severity": 2,
                "message": "'crop' is already declared in the upper scope.",
                "line": 26,
                "column": 21,
                "nodeType": "Identifier",
                "source": "                var crop = JSON.parse(radlCoverage[1]);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 28,
                "column": 52,
                "nodeType": "BinaryExpression",
                "source": "                if(component.get(\"v.isInitialize\") == false){"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'i' is already defined",
                "line": 52,
                "column": 33,
                "nodeType": "Identifier",
                "source": "                        for(var i=0;i< season.length;i++){"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'i' is already defined",
                "line": 55,
                "column": 33,
                "nodeType": "Identifier",
                "source": "                        for(var i=0;i< crop.length;i++){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 67,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Error occured');"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 74,
                "column": 41,
                "nodeType": "BinaryExpression",
                "source": "        if(component.get(\"v.loadChart\") == true){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 83,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(cmp != undefined){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 84,
                "column": 25,
                "nodeType": "MemberExpression",
                "source": "                        console.log('New Cmp');"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 98,
                "column": 29,
                "nodeType": "BinaryExpression",
                "source": "                    if(comp != undefined){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 125,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(cmp != undefined){"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_AccountByRadlChart\\Frontier_AccountByRadlChartController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_AccountByRadlChart\\Frontier_AccountByRadlChartHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 4,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('-----Acccount coverage chart-----' );"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 19,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Success');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 23,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('type' + component.get(\"v.accCoverageLbl\"));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 38,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Retain');"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 44,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Develop'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 48,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Acquire'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 51,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Retain'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 56,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Light Touch'){"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'key' is already defined",
                "line": 76,
                "column": 25,
                "nodeType": "Identifier",
                "source": "                for(var key in accCoverageRADL.accPgmRadlpercMap){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 78,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Develop'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 82,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Acquire'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 85,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Retain'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 88,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Light Touch'){"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'key' is already defined",
                "line": 108,
                "column": 25,
                "nodeType": "Identifier",
                "source": "                for(var key in accCoverageRADL.accTouchRadlpercMap){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 110,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Develop'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 114,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Acquire'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 117,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Retain'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 120,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Light Touch'){"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'key' is already defined",
                "line": 141,
                "column": 25,
                "nodeType": "Identifier",
                "source": "                for(var key in accCoverageRADL.TpcountpercRadlMap){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 143,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Develop'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 147,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Acquire'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 150,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Retain'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 153,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Light Touch'){"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'key' is already defined",
                "line": 174,
                "column": 25,
                "nodeType": "Identifier",
                "source": "                for(var key in accCoverageRADL.avgVisitRadlperMap){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 176,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Develop'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 180,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Acquire'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 183,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Retain'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 186,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Light Touch'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 198,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Errors', response.getError());"
            },
            {
                "ruleId": "no-shadow",
                "severity": 2,
                "message": "'data' is already declared in the upper scope.",
                "line": 257,
                "column": 54,
                "nodeType": "Identifier",
                "source": "                        label: function(tooltipItem, data) {"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 259,
                "column": 29,
                "nodeType": "MemberExpression",
                "source": "                            console.log('label' + data.labels[tooltipItem.index]);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 261,
                "column": 63,
                "nodeType": "BinaryExpression",
                "source": "                            if(data.labels[tooltipItem.index] == 'Accounts'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 262,
                "column": 33,
                "nodeType": "MemberExpression",
                "source": "                                console.log('Inside');"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 265,
                "column": 63,
                "nodeType": "BinaryExpression",
                "source": "                            if(data.labels[tooltipItem.index] == 'Accounts with Program'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 266,
                "column": 33,
                "nodeType": "MemberExpression",
                "source": "                                console.log('Inside');"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'RadlVal' is already defined",
                "line": 267,
                "column": 37,
                "nodeType": "Identifier",
                "source": "                                var RadlVal =  [accCoverageRADL.accPgmRadlMap.hasOwnProperty(RadlLbl) ? accCoverageRADL.accPgmRadlMap[RadlLbl] : 0];"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 269,
                "column": 63,
                "nodeType": "BinaryExpression",
                "source": "                            if(data.labels[tooltipItem.index] == 'Accounts Visited'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 270,
                "column": 33,
                "nodeType": "MemberExpression",
                "source": "                                console.log('Inside');"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'RadlVal' is already defined",
                "line": 271,
                "column": 37,
                "nodeType": "Identifier",
                "source": "                                var RadlVal =  [accCoverageRADL.accTouchRadlMap.hasOwnProperty(RadlLbl) ? accCoverageRADL.accTouchRadlMap[RadlLbl] : 0];"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 273,
                "column": 63,
                "nodeType": "BinaryExpression",
                "source": "                            if(data.labels[tooltipItem.index] == 'Total Visits'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 274,
                "column": 33,
                "nodeType": "MemberExpression",
                "source": "                                console.log('Inside');"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'RadlVal' is already defined",
                "line": 275,
                "column": 37,
                "nodeType": "Identifier",
                "source": "                                var RadlVal =  [accCoverageRADL.TouchpointcountRadlMap.hasOwnProperty(RadlLbl) ? accCoverageRADL.TouchpointcountRadlMap[RadlLbl] : 0];"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 277,
                "column": 63,
                "nodeType": "BinaryExpression",
                "source": "                            if(data.labels[tooltipItem.index] == 'Avg Visits'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 278,
                "column": 33,
                "nodeType": "MemberExpression",
                "source": "                                console.log('Inside');"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'RadlVal' is already defined",
                "line": 279,
                "column": 37,
                "nodeType": "Identifier",
                "source": "                                var RadlVal =  [accCoverageRADL.avgVisitRadlMap.hasOwnProperty(RadlLbl) ? accCoverageRADL.avgVisitRadlMap[RadlLbl] : 0];"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_AccountDashboard_MasterComponent\\Frontier_AccountDashboard_MasterComponentController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 6,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('doinit');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 14,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('accType' + accType);"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_AccountDashboard_MasterComponent\\Frontier_AccountDashboard_MasterComponentHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 22,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log(\"retResponse\"+ JSON.stringify(retResponse));"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'i' is already defined",
                "line": 31,
                "column": 25,
                "nodeType": "Identifier",
                "source": "                for(var i=0;i< retResponse.accTypes.length;i++){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 32,
                "column": 123,
                "nodeType": "BinaryExpression",
                "source": "                     accType.push({\"class\": \"optionClass\", label: retResponse.accTypes[i], value:(retResponse.accTypes[i] == 'Dealer'?'Partner': (retResponse.accTypes[i] == 'Grower'?'Customer':'All Accounts'))});"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 32,
                "column": 171,
                "nodeType": "BinaryExpression",
                "source": "                     accType.push({\"class\": \"optionClass\", label: retResponse.accTypes[i], value:(retResponse.accTypes[i] == 'Dealer'?'Partner': (retResponse.accTypes[i] == 'Grower'?'Customer':'All Accounts'))});"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_AccountDashboard\\Frontier_AccountDashboardController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 49,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"c:Frontier_AccountDetailViewComponent=>\"+event.getParam(\"accId\"));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 50,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"c:Frontier_AccountDetailViewComponent=>\"+event.getParam(\"sapId\"));"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_AccountDashboard\\Frontier_AccountDashboardHelper.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_AccountDashborad_DealerList\\Frontier_AccountDashborad_DealerListController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 3,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('I nside dealer');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 9,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('cmpName' +cmpName);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 10,
                "column": 20,
                "nodeType": "BinaryExpression",
                "source": "        if(cmpName == 'DealerDashboardList'){"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_AccountDashborad_DealerList\\Frontier_AccountDashborad_DealerListHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 7,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('visit' + visit);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 14,
                "column": 31,
                "nodeType": "BinaryExpression",
                "source": "                visit : (visit=='None'?'null':visit)"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 21,
                "column": 22,
                "nodeType": "MemberExpression",
                "source": "                     console.log(\"retResponse\"+ JSON.stringify(retResponse));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 23,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log(retResponse[0].Count + 'Total');"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 29,
                "column": 44,
                "nodeType": "BinaryExpression",
                "source": "                else if(retResponse.length == 0){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 37,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Error');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_AccountDetailApp\\Frontier_AccountDetailAppController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_AccountDetailApp\\Frontier_AccountDetailAppHelper.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_AccountDetailMasterComponent\\Frontier_AccountDetailMasterComponentController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 157,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"offsetTop::\" +startY);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 166,
                "column": 21,
                "nodeType": "BinaryExpression",
                "source": "        if(targetId != '' && targetId != 'undefined'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 166,
                "column": 39,
                "nodeType": "BinaryExpression",
                "source": "        if(targetId != '' && targetId != 'undefined'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 184,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"Event Object::\" +event);"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_AccountDetailMasterComponent\\Frontier_AccountDetailMasterComponentHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 3,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Inside Frontier_AccountList');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 7,
                "column": 32,
                "nodeType": "MemberExpression",
                "source": "                               console.log('AccountList==>'+Accounts);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 12,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Done Frontier_AccountList');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 16,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Inside Frontier_AccountDashboard');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 22,
                "column": 32,
                "nodeType": "MemberExpression",
                "source": "                               console.log('Frontier_AccountDashboard');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 27,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Done Frontier_AccountDashboard');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 46,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log('taskId=>'+taskId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 74,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Return Value' + response.getReturnValue());"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 83,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('task Lenght'+task[0].taskTotalRecords);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 84,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Success Task');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 85,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('component.get(\"v.showReminderPopUpFlag\")=>'+component.get(\"v.showReminderPopUpFlag\"));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 87,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Error');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 99,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('response=>'+response);"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_AccountDetailMasterComponent\\Frontier_AccountDetailMasterComponentRenderer.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_AccountDetails\\Frontier_AccountDetailsController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_AccountDetails\\Frontier_AccountDetailsHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 3,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('accountDetailResponse=>'+cmp.get(\"v.accountDetailResponse\"));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 5,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('accId=>'+ cmp.get(\"v.accId\"));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 6,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('accCommunicationId=>'+ cmp.get(\"v.accCommunicationId\"));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 14,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('accountResponse=>'+response.getReturnValue());"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 22,
                "column": 25,
                "nodeType": "MemberExpression",
                "source": "                        console.log(\"Error message: \"+errors[0].message);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 25,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log(\"Unknown error\");"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_AccountDetailViewComponent\\Frontier_AccountDetailViewComponentController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_AccountDetailViewComponent\\Frontier_AccountDetailViewComponentHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 7,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log('component.get(\"v.sapId\")=>'+component.get(\"v.sapId\"));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 8,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log('component.get(\"v.accCommunicationId\")=>'+component.get(\"v.accCommunicationId\"));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 13,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('accId================>'+response.getReturnValue());"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 41,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('CalloutError');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 44,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Call Back Error');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 50,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log('Exception Occured'+e);"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_AccountList\\Frontier_AccountListController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 6,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"growerAcc=====:::\" + component.get(\"v.growerAcc\"));        "
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 76,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('cmpName' + cmpName);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 77,
                "column": 20,
                "nodeType": "BinaryExpression",
                "source": "        if(cmpName == 'DealerList'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 81,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(sortenable + 'sortenable');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 87,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log(searchKey +'searchKey');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 101,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log(direction + \"Direction\");"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 137,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log('Exception Occured'+e);"
            },
            {
                "ruleId": "no-alert",
                "severity": 2,
                "message": "Unexpected alert.",
                "line": 148,
                "column": 9,
                "nodeType": "CallExpression",
                "source": "        alert(accountId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 154,
                "column": 32,
                "nodeType": "MemberExpression",
                "source": "                               console.log('AccountList');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_AccountList\\Frontier_AccountListHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 6,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"================= Inside searchEmployee\" + searchKey);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 7,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"================= Inside page\" + page);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 22,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log(\"Account search employee\" + accounts);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 31,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"c:Frontier_AccountDetailViewComponent\");"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 33,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('accountId,Sap Id,Accmu'+uniqueId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 67,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"Inside sort helper\");"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 68,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"Inside sort page\" + page);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 82,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log(\"Account search employee\" + accounts);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 88,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"Inside showPop\");"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 92,
                "column": 32,
                "nodeType": "MemberExpression",
                "source": "                               console.log('pop');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 99,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('accountId,Sap Id,Accmu'+uniqueId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 106,
                "column": 32,
                "nodeType": "MemberExpression",
                "source": "                               console.log('AccountList');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 119,
                "column": 32,
                "nodeType": "MemberExpression",
                "source": "                               console.log('AccountList');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_AccountSearchBar\\Frontier_AccountSearchBarController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 5,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"ist event value\" + event.target.value);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 11,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"Selected\" +selectCmp);"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_AccountSearchBar\\Frontier_AccountSearchBarHelper.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_AccountSearchBar\\Frontier_AccountSearchBarRenderer.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_AccountTracking_Table\\Frontier_AccountTracking_TableController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 5,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"checking\"+productID);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 10,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"Inside sort\");"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 11,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"event\" + sortFieldName);"
            },
            {
                "ruleId": "no-use-before-define",
                "severity": 2,
                "message": "'sortFieldName' was used before it was defined",
                "line": 11,
                "column": 31,
                "nodeType": "Identifier",
                "source": "        console.log(\"event\" + sortFieldName);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 25,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"Hello=>\"+event.target.id);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 30,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"Finished\");"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_AccountTracking_Table\\Frontier_AccountTracking_TableHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 4,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(JSON.stringify(component.get(\"v.Trackingtabledetails\")));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 6,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"sort\" + sortFieldName);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 7,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"productID\" + productID);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 19,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Success');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 21,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Error');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_AccountTracking_Table\\Frontier_AccountTracking_TableRenderer.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_AccountTrackingTable\\Frontier_AccountTrackingTableController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_AccountTrackingTable\\Frontier_AccountTrackingTableHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 83,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log(response.getReturnValue());"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 84,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log(\"Sucess tracking\");"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 98,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('CalloutError');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 101,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Call Back Error');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_AccountTrackingTable\\Frontier_AccountTrackingTableRenderer.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_Activities_List\\Frontier_Activities_ListController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 11,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(productID);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 12,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('doInit');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 30,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('inside showModal');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 40,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(productID);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 41,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('searchVisits');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 47,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Previous Id'+component.get(\"v.PrevIndex\"));"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 48,
                "column": 52,
                "nodeType": "BinaryExpression",
                "source": "        var prevId = (component.get(\"v.PrevIndex\") != \"\" ? component.get(\"v.PrevIndex\") : \"\");"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 69,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(thisValue);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 93,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('********************'+thisId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 95,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(component.get(\"v.PrevIndex\"));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 100,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(productID);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 101,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('doInit');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_Activities_List\\Frontier_Activities_ListHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 3,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('inside getsobj');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 9,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(pageSize + 'pageSize');"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 11,
                "column": 32,
                "nodeType": "BinaryExpression",
                "source": "            if(event.target.id == 'searchText' ) {"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 15,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log(searchText + 'searchText');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 32,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('From Date'+fromDate);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 38,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log(frmActvDate);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 39,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log(toActvDate);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 48,
                "column": 62,
                "nodeType": "BinaryExpression",
                "source": "        if(!flag && document.getElementById('searchContact') != undefined){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 52,
                "column": 27,
                "nodeType": "BinaryExpression",
                "source": "            if(searchText == '' || searchText == 'undefined'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 52,
                "column": 47,
                "nodeType": "BinaryExpression",
                "source": "            if(searchText == '' || searchText == 'undefined'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 55,
                "column": 34,
                "nodeType": "BinaryExpression",
                "source": "            if(searchContactText == '' || searchContactText == 'undefined'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 55,
                "column": 61,
                "nodeType": "BinaryExpression",
                "source": "            if(searchContactText == '' || searchContactText == 'undefined'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 58,
                "column": 25,
                "nodeType": "BinaryExpression",
                "source": "            if(fromDate == ''){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 61,
                "column": 23,
                "nodeType": "BinaryExpression",
                "source": "            if(toDate == ''){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 64,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log(searchText + 'searchText');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 65,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log(\"Selected\" +searchText + '' + searchType+''+fromDate+''+toDate);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 87,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log(\"retResponse\"+ retResponse);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 93,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Error');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_ActivityDetail_EditTouchPoint\\Frontier_ActivityDetail_EditTouchPointController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 14,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log(\"state\" + state);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 35,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log(\"state\" + state);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 47,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('controlPick' + controlPick);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 59,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log(\"state\" + state);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 66,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "            if(controlPick != previousValue){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 69,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Inside if');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 84,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('selectedDepValue' + selectedDepValue);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 86,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('hightli' + (component.get(\"v.highlghtDepValue\")));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 105,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log(\"state\" + state);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 121,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('pgmValue' + component.get(\"v.highlghtDepValue\"));"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_ActivitySummary\\Frontier_ActivitySummaryHelper.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_AddNewAccountSpecificActivity\\Frontier_AddNewAccountSpecificActivityController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_AddNewAccountSpecificActivity\\Frontier_AddNewAccountSpecificActivityHelper.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_addPgmActivity\\Frontier_addPgmActivityController.js",
        "result": [
            {
                "ruleId": "no-alert",
                "severity": 2,
                "message": "Unexpected alert.",
                "line": 3,
                "column": 9,
                "nodeType": "CallExpression",
                "source": "        alert('Inside addpgm');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 13,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log(\"state\" + state);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 28,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('controlPick' + controlPick);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 39,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log(\"state\" + state);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 52,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('selectedDepValue' + selectedDepValue);"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_AddTouchPointCard\\Frontier_AddTouchPointCardController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 6,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"I am inside sub component----\");"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_AllDealer_GrowerProgram_Chart\\Frontier_AllDealer_GrowerProgram_ChartController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 3,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Inside chart');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_AllDealer_GrowerProgram_Chart\\Frontier_AllDealer_GrowerProgram_ChartHelper.js",
        "result": [
            {
                "ruleId": null,
                "fatal": true,
                "severity": 2,
                "source": "                    Chart.helpers.each(self.data.datasets.forEach((dataset, datasetIndex) => {",
                "message": "Parsing error: Parenthesized pattern",
                "line": 132,
                "column": 67
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_AllDealers_GrowerPrograms_MasterComponent\\Frontier_AllDealers_GrowerPrograms_MasterComponentController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_AllDealers_GrowerPrograms_MasterComponent\\Frontier_AllDealers_GrowerPrograms_MasterComponentHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 7,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('acctDetails' +acctDetails);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 28,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log(\"retResponse\"+ JSON.stringify(retResponse));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 42,
                "column": 16,
                "nodeType": "MemberExpression",
                "source": "               console.log('Acquire' + Acquire + 'Develop' + Develop + 'LightTouch' +LightTouch +'Retain'+Retain);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 95,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Error');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 103,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('My Programs' + programId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 110,
                "column": 32,
                "nodeType": "MemberExpression",
                "source": "                               console.log('Program Details');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_AllDealers_ProgramPlanning_ProgramList\\Frontier_AllDealers_ProgramPlanning_ProgramListController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 8,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('cmpName' + cmpName);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 9,
                "column": 20,
                "nodeType": "BinaryExpression",
                "source": "        if(cmpName == 'AllDealerProgramsList'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 24,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"progId\" + event.target.value);"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_AllDealers_ProgramPlanning_ProgramList\\Frontier_AllDealers_ProgramPlanning_ProgramListHelper.js",
        "result": [
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'page' is already defined",
                "line": 3,
                "column": 6,
                "nodeType": "Identifier",
                "source": "\tvar page=page||1;"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 25,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log(\"retResponse\"+ retResponse);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 38,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Error');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_AllDealers_SalesRep_ProgramDetail_Master\\Frontier_AllDealers_SalesRep_ProgramDetail_MasterController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 19,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Inside refresh Event');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 21,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('cmpName' + cmpName);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 22,
                "column": 20,
                "nodeType": "BinaryExpression",
                "source": "        if(cmpName == 'AllDealers'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 32,
                "column": 35,
                "nodeType": "BinaryExpression",
                "source": "        if(event.currentTarget.id != '' && component.get(\"v.prevId\") != '' && component.get(\"v.prevId\") != event.currentTarget.id){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 32,
                "column": 70,
                "nodeType": "BinaryExpression",
                "source": "        if(event.currentTarget.id != '' && component.get(\"v.prevId\") != '' && component.get(\"v.prevId\") != event.currentTarget.id){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 32,
                "column": 105,
                "nodeType": "BinaryExpression",
                "source": "        if(event.currentTarget.id != '' && component.get(\"v.prevId\") != '' && component.get(\"v.prevId\") != event.currentTarget.id){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 36,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"Event Target\"+event.currentTarget.id)"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 37,
                "column": 35,
                "nodeType": "BinaryExpression",
                "source": "        if(event.currentTarget.id != ''){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 51,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('cancel');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_AllDealers_SalesRep_ProgramDetail_Master\\Frontier_AllDealers_SalesRep_ProgramDetail_MasterHelper.js",
        "result": [
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 7,
                "column": 21,
                "nodeType": "BinaryExpression",
                "source": "        if(groweAcc == 'undefined' || groweAcc=='' || groweAcc==null){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 7,
                "column": 47,
                "nodeType": "BinaryExpression",
                "source": "        if(groweAcc == 'undefined' || groweAcc=='' || groweAcc==null){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 10,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('groweAcc' + groweAcc);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 11,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Program Id' + programId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 15,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Inside Helper Target' + event.currentTarget.id);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 17,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Sort Field'+sortfield);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 21,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Triggered Field'+triggeredField);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 23,
                "column": 71,
                "nodeType": "BinaryExpression",
                "source": "            else if(isPageChange && component.get(\"v.triggeredField\") != \"\"){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 42,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log(\"retResponse\"+ retResponse);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 52,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Error');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 73,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Success');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 76,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Error');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 83,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"c:Frontier_GrowerAccount_UpdateTouchPoint\");"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 87,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('currentDateId' + currentDateId);"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'retResponse' is already defined",
                "line": 123,
                "column": 26,
                "nodeType": "Identifier",
                "source": "                     var retResponse = (JSON.parse(response.getReturnValue()));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 124,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log(\"retResponse\"+ JSON.stringify(retResponse));"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'i' is already defined",
                "line": 130,
                "column": 25,
                "nodeType": "Identifier",
                "source": "                for(var i=0;i< retResponse.croptypes.length;i++){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 136,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log(\"retResponse\"+ JSON.stringify(retResponse));                    "
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 146,
                "column": 16,
                "nodeType": "MemberExpression",
                "source": "               console.log('Acquire' + Acquire + 'Develop' + Develop + 'LightTouch' +LightTouch +'Retain'+Retain);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 162,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Error');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 174,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Inside Grower Profile');        "
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 183,
                "column": 14,
                "nodeType": "MemberExpression",
                "source": "             console.log('growerAccountDetailJson' + seasonDetailsJson);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 184,
                "column": 5,
                "nodeType": "MemberExpression",
                "source": "\t\t\t console.log('growerAccountDetailJson.growerSeason' + seasonDetailsJson.growerSeason);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 186,
                "column": 14,
                "nodeType": "MemberExpression",
                "source": "             console.log('seasonDetailsJson.growerSeason' + seasonDetailsJson.growerSeason);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 191,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log(\"Errors\", response.getError());"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_AllDealers_SalesRep_ProgramDetails\\Frontier_AllDealers_SalesRep_ProgramDetailsController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 12,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('cmpName' + cmpName);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 13,
                "column": 20,
                "nodeType": "BinaryExpression",
                "source": "        if(cmpName == 'AllGrowerAccountList'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 24,
                "column": 35,
                "nodeType": "BinaryExpression",
                "source": "        if(event.currentTarget.id != '' && component.get(\"v.prevId\") != '' && component.get(\"v.prevId\") != event.currentTarget.id){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 24,
                "column": 70,
                "nodeType": "BinaryExpression",
                "source": "        if(event.currentTarget.id != '' && component.get(\"v.prevId\") != '' && component.get(\"v.prevId\") != event.currentTarget.id){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 24,
                "column": 105,
                "nodeType": "BinaryExpression",
                "source": "        if(event.currentTarget.id != '' && component.get(\"v.prevId\") != '' && component.get(\"v.prevId\") != event.currentTarget.id){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 28,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"Event Target\"+event.currentTarget.id)"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 29,
                "column": 35,
                "nodeType": "BinaryExpression",
                "source": "        if(event.currentTarget.id != ''){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 45,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(component.get(\"v.programId\"));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 58,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"reason\" + reason);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 64,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"ispageChange out\" + ispageChange);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 65,
                "column": 26,
                "nodeType": "BinaryExpression",
                "source": "        if (ispageChange == undefined){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 66,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log(\"ispageChange\" + ispageChange);"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_AllDealers_SalesRep_ProgramDetails\\Frontier_AllDealers_SalesRep_ProgramDetailsHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 7,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Program Id' + programId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 11,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Inside Helper Target' + event.currentTarget.id);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 13,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('&&&&&&&&&&&&&'+sortfield);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 17,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Triggered Field'+triggeredField);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 19,
                "column": 71,
                "nodeType": "BinaryExpression",
                "source": "            else if(isPageChange && component.get(\"v.triggeredField\") != \"\"){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 23,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(programId+component.get(\"v.pageSize\")+page+triggeredField+isInitialize+isPageChange);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 39,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log(\"retResponse\"+ retResponse);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 50,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Error');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 57,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('pgmAcc' + pgmAccId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 62,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log( accPgmId + ' ' + status);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 73,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Success');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 80,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Error');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 87,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Inside complete');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 89,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('pgmAcc' + pgmAccId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 94,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log( accPgmId + ' ' + status);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 104,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Success');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 107,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('popUpFlag' + popUpFlag);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 108,
                "column": 29,
                "nodeType": "BinaryExpression",
                "source": "                if(popUpFlag=='Allow'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 112,
                "column": 29,
                "nodeType": "BinaryExpression",
                "source": "                if(popUpFlag=='Not Allow'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 124,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Error');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 145,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Success');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 148,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Error');"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'url' is already defined",
                "line": 171,
                "column": 21,
                "nodeType": "Identifier",
                "source": "                var url = '/one/one.app#/n/Grower_List?myprogramDetails='+myprogramDetails;"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'viewRecord' is already defined",
                "line": 172,
                "column": 21,
                "nodeType": "Identifier",
                "source": "                var viewRecord = document.getElementById(event.target.id);"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_AllPrograms_MasterComponent\\Frontier_AllPrograms_MasterComponentController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_AllPrograms_MasterComponent\\Frontier_AllPrograms_MasterComponentHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 7,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('acctDetails' +acctDetails);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 9,
                "column": 15,
                "nodeType": "MemberExpression",
                "source": "              console.log('acctDetails inside If' +acctDetails);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 13,
                "column": 21,
                "nodeType": "BinaryExpression",
                "source": "        if(dealerId == 'undefined' || dealerId=='' || dealerId==null){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 13,
                "column": 47,
                "nodeType": "BinaryExpression",
                "source": "        if(dealerId == 'undefined' || dealerId=='' || dealerId==null){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 17,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('dealerId' + dealerId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 33,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log(\"retResponse\"+ JSON.stringify(retResponse));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 48,
                "column": 16,
                "nodeType": "MemberExpression",
                "source": "               console.log('Acquire' + Acquire + 'Develop' + Develop + 'LightTouch' +LightTouch +'Retain'+Retain);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 100,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Error');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 109,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('My Programs' + dealerId+programId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 117,
                "column": 32,
                "nodeType": "MemberExpression",
                "source": "                               console.log('Program Details');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_AssociatedProducts\\Frontier_AssociatedProductsController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_AssociatedProducts\\Frontier_AssociatedProductsHelper.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_AssociatedProducts\\Frontier_AssociatedProductsRenderer.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_CalenderMasterComponent\\Frontier_CalenderMasterComponentController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_CalenderMasterComponent\\Frontier_CalenderMasterComponentHelper.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_CancelPopup\\Frontier_CancelPopupController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 3,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('I nside handle cancel');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_Carosel_Activities\\Frontier_Carosel_ActivitiesController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 23,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"complete Program\");     "
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 71,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('state' +state);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 90,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"selectedTaskId\" +selectedTaskId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 98,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"I am in saveComments\" + textAreaValue);"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_Carosel_Activities\\Frontier_Carosel_ActivitiesHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 22,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log(\"json stringfiy:::\" + JSON.stringify(retResponse));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 27,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log(\"v.programEventList from PA\" + programEventlist);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 56,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Error');"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'cmpEvent' is already defined",
                "line": 231,
                "column": 29,
                "nodeType": "Identifier",
                "source": "                        var cmpEvent = component.getEvent(\"loadCarosel\");"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'i' is already defined",
                "line": 242,
                "column": 25,
                "nodeType": "Identifier",
                "source": "                for(var i in selectedMap){"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'cmpEvent' is already defined",
                "line": 329,
                "column": 29,
                "nodeType": "Identifier",
                "source": "                        var cmpEvent = component.getEvent(\"loadCarosel\");"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'cmpEvent' is already defined",
                "line": 404,
                "column": 29,
                "nodeType": "Identifier",
                "source": "                        var cmpEvent = component.getEvent(\"loadCarosel\");"
            },
            {
                "ruleId": "no-loop-func",
                "severity": 2,
                "message": "Don't make functions within a loop",
                "line": 520,
                "column": 21,
                "nodeType": "FunctionExpression",
                "source": "                    function(newButton, status, errorMessage){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 526,
                "column": 29,
                "nodeType": "MemberExpression",
                "source": "                            console.log(\"Error: \" + errorMessage);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 552,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Success');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 555,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Error');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 582,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Saved in the backend.  Response success.');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 585,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Unable to save.  Error reported.');"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 598,
                "column": 40,
                "nodeType": "BinaryExpression",
                "source": "                               if(comp != undefined){"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_Carosel_Activities\\Frontier_Carosel_ActivitiesRenderer.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 4,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"-----\");"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_ContactLookUp\\Frontier_ContactLookUpController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_ContactLookUp\\Frontier_ContactLookUpHelper.js",
        "result": [
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 59,
                "column": 25,
                "nodeType": "BinaryExpression",
                "source": "            if(inputVal != ''){"
            },
            {
                "ruleId": "aura-api",
                "severity": 2,
                "message": "Invalid Aura API",
                "line": 88,
                "column": 24,
                "nodeType": "MemberExpression",
                "source": "                return $A.error('Unexpected error: '+a.error[0].message);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 91,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log('a.getReturnValue()=>'+a.getReturnValue());"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'matches' is already defined",
                "line": 96,
                "column": 17,
                "nodeType": "Identifier",
                "source": "            var matches = [];"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'substrRegex' is already defined",
                "line": 99,
                "column": 17,
                "nodeType": "Identifier",
                "source": "            var substrRegex = new RegExp(searchString, 'i');"
            },
            {
                "ruleId": "aura-api",
                "severity": 2,
                "message": "Invalid Aura API",
                "line": 157,
                "column": 24,
                "nodeType": "MemberExpression",
                "source": "                return $A.error('Unexpected error: '+a.error[0].message);"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_ContactLookUp\\Frontier_ContactLookUpRenderer.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_Dealer_Grower_ProgramChart\\Frontier_Dealer_Grower_ProgramChartController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 3,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Inside chart');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_Dealer_Grower_ProgramChart\\Frontier_Dealer_Grower_ProgramChartHelper.js",
        "result": [
            {
                "ruleId": null,
                "fatal": true,
                "severity": 2,
                "source": "                    Chart.helpers.each(self.data.datasets.forEach((dataset, datasetIndex) => {",
                "message": "Parsing error: Parenthesized pattern",
                "line": 135,
                "column": 67
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_Dealer_GrowerProgram_Chart\\Frontier_Dealer_GrowerProgram_ChartController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 3,
                "column": 10,
                "nodeType": "MemberExpression",
                "source": "         console.log('Inside chart');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_Dealer_GrowerProgram_Chart\\Frontier_Dealer_GrowerProgram_ChartHelper.js",
        "result": [
            {
                "ruleId": null,
                "fatal": true,
                "severity": 2,
                "source": "                    Chart.helpers.each(self.data.datasets.forEach((dataset, datasetIndex) => {",
                "message": "Parsing error: Parenthesized pattern",
                "line": 154,
                "column": 67
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_Dealer_GrowerProgram_Chart\\Frontier_Dealer_GrowerProgram_ChartRenderer.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_DealerAccount_Sales_Master\\Frontier_DealerAccount_Sales_MasterController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 3,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Inside dealer chart');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_DealerAccount_Sales_Master\\Frontier_DealerAccount_Sales_MasterHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 5,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Dealer id' +dealerAccId);"
            },
            {
                "ruleId": "no-use-before-define",
                "severity": 2,
                "message": "'dealerAccId' was used before it was defined",
                "line": 5,
                "column": 34,
                "nodeType": "Identifier",
                "source": "        console.log('Dealer id' +dealerAccId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 6,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('UOM'+UOM);"
            },
            {
                "ruleId": "no-use-before-define",
                "severity": 2,
                "message": "'UOM' was used before it was defined",
                "line": 6,
                "column": 27,
                "nodeType": "Identifier",
                "source": "        console.log('UOM'+UOM);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 9,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('dealerAccId' + dealerAccId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 18,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Success');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 20,
                "column": 15,
                "nodeType": "MemberExpression",
                "source": "              console.log('growerAccSalesJson' + JSON.stringify(growerAccSalesJson));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 24,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Map');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 27,
                "column": 16,
                "nodeType": "MemberExpression",
                "source": "               console.log('growerSalesFarmCrop' +growerSalesFarmCrop.sort());"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 45,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log(\"Errors\", response.getError());"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_DealerAccountDetail_RecentTouchPoint\\Frontier_DealerAccountDetail_RecentTouchPointController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_DealerDetail_Collapsible\\Frontier_DealerDetail_CollapsibleController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_DealerDetail_Collapsible\\Frontier_DealerDetail_CollapsibleHelper.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_DealerDetail_MasterComponent\\Frontier_DealerDetail_MasterComponentController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_DealerDetail_MasterComponent\\Frontier_DealerDetail_MasterComponentHelper.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_DealerDetail_Opportunity\\Frontier_DealerDetail_OpportunityController.js",
        "result": [
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 17,
                "column": 55,
                "nodeType": "BinaryExpression",
                "source": "        if(event.target.id != null && event.target.id == 'Area'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 22,
                "column": 48,
                "nodeType": "BinaryExpression",
                "source": "           if(prevId === '' && event.target.id != 'Units'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 26,
                "column": 25,
                "nodeType": "BinaryExpression",
                "source": "              if(prevId != '' && prevId != event.target.id){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 26,
                "column": 41,
                "nodeType": "BinaryExpression",
                "source": "              if(prevId != '' && prevId != event.target.id){"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_DealerDetail_Opportunity\\Frontier_DealerDetail_OpportunityHelper.js",
        "result": [
            {
                "ruleId": null,
                "fatal": true,
                "severity": 2,
                "source": "            legend: {",
                "message": "Parsing error: Redefinition of property",
                "line": 144,
                "column": 13
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_DealerDetail_Profile\\Frontier_DealerDetail_ProfileController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_DealerDetail_Profile\\Frontier_DealerDetail_ProfileHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 11,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('selecteddealer'+selecteddealer+'action'+action+'seasonVal'+seasonVal);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 20,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Inside Profile' +JSON.stringify(dealerAccountDetailJson ));"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_DealerDetail_RecordTouchPoint\\Frontier_DealerDetail_RecordTouchPointController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_DealerDetail_RecordTouchPoint\\Frontier_DealerDetail_RecordTouchPointHelper.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_DealerDetail_SalesTrend\\Frontier_DealerDetail_SalesTrendController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_DealerDetail_SalesTrend\\Frontier_DealerDetail_SalesTrendHelper.js",
        "result": [
            {
                "ruleId": "radix",
                "severity": 2,
                "message": "Missing radix parameter.",
                "line": 10,
                "column": 27,
                "nodeType": "CallExpression",
                "source": "        var currentYear = parseInt(new Date().getFullYear());"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_DealerRADLTerritoryStructure\\Frontier_DealerRADLTerritoryStructureController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_DealerRADLTerritoryStructure\\Frontier_DealerRADLTerritoryStructureHelper.js",
        "result": [
            {
                "ruleId": null,
                "fatal": true,
                "severity": 2,
                "source": "                            if(season[i]===='SUMMER')",
                "message": "Parsing error: Unexpected token =",
                "line": 26,
                "column": 44
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_DealersGrowersList\\Frontier_DealersGrowersListController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_DealersGrowersList\\Frontier_DealersGrowersListHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 20,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('accountDetailJson' + JSON.parse(accountDetailJson[1]));                "
            },
            {
                "ruleId": "no-loop-func",
                "severity": 2,
                "message": "Don't make functions within a loop",
                "line": 65,
                "column": 21,
                "nodeType": "FunctionExpression",
                "source": "                    function(newCmp){"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_DealersGrowersList\\Frontier_DealersGrowersListRenderer.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_DynamicAruaIdMarkup\\Frontier_DynamicAruaIdMarkupController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_DynamicAruaIdMarkup\\Frontier_DynamicAruaIdMarkupHelper.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_DynamicAruaIdMarkup\\Frontier_DynamicAruaIdMarkupRenderer.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_EventList\\Frontier_EventListController.js",
        "result": [
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 13,
                "column": 38,
                "nodeType": "BinaryExpression",
                "source": "        if(component.get(\"v.prevId\") != ''){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 40,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "        if(event.target.id != '' && component.get(\"v.prevId\") != '' && component.get(\"v.prevId\") != event.target.id){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 40,
                "column": 63,
                "nodeType": "BinaryExpression",
                "source": "        if(event.target.id != '' && component.get(\"v.prevId\") != '' && component.get(\"v.prevId\") != event.target.id){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 40,
                "column": 98,
                "nodeType": "BinaryExpression",
                "source": "        if(event.target.id != '' && component.get(\"v.prevId\") != '' && component.get(\"v.prevId\") != event.target.id){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 44,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"Event Target\"+event.target.id)"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 45,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "        if(event.target.id != ''){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 72,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('createdUser=>'+component.find('createdUser').get(\"v.value\"));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 83,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('createdUser=>'+component.find('TeamSort').get(\"v.value\"));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 103,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Previous Id'+component.get(\"v.PrevIndex\"));"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 104,
                "column": 52,
                "nodeType": "BinaryExpression",
                "source": "        var prevId = (component.get(\"v.PrevIndex\") != \"\" ? component.get(\"v.PrevIndex\") : \"\");"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 106,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('event.target.id' + event.target.id);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 126,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(thisValue);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 150,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('********************'+thisId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 152,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(component.get(\"v.PrevIndex\"));"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_EventList\\Frontier_EventListHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 3,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('YYYYYYYY'+createdByUsers);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 9,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(sortByRADLList + sortByRADLList);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 15,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Triggered Field'+triggeredField);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 17,
                "column": 71,
                "nodeType": "BinaryExpression",
                "source": "            else if(isPageChange && component.get(\"v.triggeredField\") != \"\"){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 26,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('*****************'+page);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 27,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('triggeredField'+triggeredField);"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'page' is already defined",
                "line": 28,
                "column": 13,
                "nodeType": "Identifier",
                "source": "        var page = page || 1;"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 58,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log(\"Visit List\"+ visitlist);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 60,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Sort Order'+retResponse[2]);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 61,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('retResponse[0].userIdAndUserNameMap=>'+retResponse[3]);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 84,
                "column": 40,
                "nodeType": "BinaryExpression",
                "source": "            else if(retResponse.length == 0) {"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 96,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log('Error');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 103,
                "column": 5,
                "nodeType": "MemberExpression",
                "source": "    console.log(\"Inside showPop\" + message);        "
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 108,
                "column": 28,
                "nodeType": "MemberExpression",
                "source": "                           console.log('pop');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_EventList\\Frontier_EventListRenderer.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_FollowUpReport\\Frontier_FollowUpReportController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 3,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"hjghgj\");"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 14,
                "column": 38,
                "nodeType": "BinaryExpression",
                "source": "        if(component.get(\"v.prevId\") != ''){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 39,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "        if(event.target.id != '' && component.get(\"v.prevId\") != '' && component.get(\"v.prevId\") != event.target.id){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 39,
                "column": 63,
                "nodeType": "BinaryExpression",
                "source": "        if(event.target.id != '' && component.get(\"v.prevId\") != '' && component.get(\"v.prevId\") != event.target.id){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 39,
                "column": 98,
                "nodeType": "BinaryExpression",
                "source": "        if(event.target.id != '' && component.get(\"v.prevId\") != '' && component.get(\"v.prevId\") != event.target.id){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 40,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log('Before'+component.get(\"v.SortBy\"+component.get(\"v.prevId\")));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 42,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log('After'+component.get(\"v.SortBy\"+component.get(\"v.prevId\")));"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 45,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "        if(event.target.id != ''){"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_FollowUpReport\\Frontier_FollowUpReportHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 10,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Triggered Field'+triggeredField);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 12,
                "column": 71,
                "nodeType": "BinaryExpression",
                "source": "            else if(isPageChange && component.get(\"v.triggeredField\") != \"\"){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 19,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('*****************'+page);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 20,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('triggeredField'+triggeredField);"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'page' is already defined",
                "line": 21,
                "column": 13,
                "nodeType": "Identifier",
                "source": "        var page = page || 1;"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 23,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(followupList + 'followupList');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 40,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log(\"retResponse\"+ retResponse);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 47,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log(\"followuplist length \"+ followuplist.length);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 51,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Sort Order'+retResponse[2])"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 53,
                "column": 44,
                "nodeType": "BinaryExpression",
                "source": "                else if(retResponse.length == 0){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 61,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Error');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_FollowUpReport\\Frontier_FollowUpReportRenderer.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_Gen_AccountSales\\Frontier_Gen_AccountSalesController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_Gen_AccountSales\\Frontier_Gen_AccountSalesHelper.js",
        "result": [
            {
                "ruleId": "no-debugger",
                "severity": 2,
                "message": "Unexpected 'debugger' statement.",
                "line": 4,
                "column": 9,
                "nodeType": "DebuggerStatement",
                "source": "        debugger;"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 15,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('accountsSalesDetailsJson' + JSON.stringify(accountsSalesDetailsJson));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 22,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log(\"Errors\", response.getError());"
            },
            {
                "ruleId": "no-alert",
                "severity": 2,
                "message": "Unexpected alert.",
                "line": 35,
                "column": 17,
                "nodeType": "CallExpression",
                "source": "                alert(\"update success\");"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 44,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log(\"Errors\", response.getError());"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_Gen_Communication\\Frontier_Gen_CommunicationController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_Gen_Communication\\Frontier_Gen_CommunicationHelper.js",
        "result": [
            {
                "ruleId": "no-debugger",
                "severity": 2,
                "message": "Unexpected 'debugger' statement.",
                "line": 4,
                "column": 9,
                "nodeType": "DebuggerStatement",
                "source": "        debugger;"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 14,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('communicationDetailsJson' + JSON.stringify(communicationDetailsJson));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 23,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log(\"Errors\", response.getError());"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_Gen_Unit_Volume_Trends_Chart\\Frontier_Gen_Unit_Volume_Trends_ChartController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GoogleMapComponent\\Frontier_GoogleMapComponentController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 8,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log('Task=>'+component.get('v.Tasks'));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 31,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log(\"Inside map\" + map);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 46,
                "column": 29,
                "nodeType": "MemberExpression",
                "source": "                            console.log('Acquire');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 61,
                "column": 29,
                "nodeType": "MemberExpression",
                "source": "                            console.log('Develop');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 77,
                "column": 29,
                "nodeType": "MemberExpression",
                "source": "                            console.log('Light Touch');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 93,
                "column": 29,
                "nodeType": "MemberExpression",
                "source": "                            console.log('Retain');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 111,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('coverageAreaJson=>'+coverageAreaJson);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 117,
                "column": 25,
                "nodeType": "MemberExpression",
                "source": "                        console.log('latlog=>'+latlng);"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GoogleMapComponent\\Frontier_GoogleMapComponentHelper.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowAcc_Touchpoints\\Frontier_GrowAcc_TouchpointsController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 17,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('event.target.id' + event.target.id);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 18,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('prevfiscalId' + prevfiscalId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 19,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('prevId' + prevId);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 20,
                "column": 32,
                "nodeType": "BinaryExpression",
                "source": "        if(event.currentTarget != undefined){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 24,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('index' +index);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 27,
                "column": 25,
                "nodeType": "BinaryExpression",
                "source": "        if(prevfiscalId == '' && event.currentTarget.id == 'Previous'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 27,
                "column": 57,
                "nodeType": "BinaryExpression",
                "source": "        if(prevfiscalId == '' && event.currentTarget.id == 'Previous'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 32,
                "column": 25,
                "nodeType": "BinaryExpression",
                "source": "        if(prevfiscalId == '' && event.currentTarget.id == 'Cancelled'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 32,
                "column": 57,
                "nodeType": "BinaryExpression",
                "source": "        if(prevfiscalId == '' && event.currentTarget.id == 'Cancelled'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 37,
                "column": 25,
                "nodeType": "BinaryExpression",
                "source": "        if(prevfiscalId != '' && prevfiscalId != event.currentTarget.id && (event.target.id == 'Cancelled' || event.target.id == 'Previous' || event.target.id == 'Upcoming')){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 37,
                "column": 47,
                "nodeType": "BinaryExpression",
                "source": "        if(prevfiscalId != '' && prevfiscalId != event.currentTarget.id && (event.target.id == 'Cancelled' || event.target.id == 'Previous' || event.target.id == 'Upcoming')){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 37,
                "column": 93,
                "nodeType": "BinaryExpression",
                "source": "        if(prevfiscalId != '' && prevfiscalId != event.currentTarget.id && (event.target.id == 'Cancelled' || event.target.id == 'Previous' || event.target.id == 'Upcoming')){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 37,
                "column": 127,
                "nodeType": "BinaryExpression",
                "source": "        if(prevfiscalId != '' && prevfiscalId != event.currentTarget.id && (event.target.id == 'Cancelled' || event.target.id == 'Previous' || event.target.id == 'Upcoming')){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 37,
                "column": 160,
                "nodeType": "BinaryExpression",
                "source": "        if(prevfiscalId != '' && prevfiscalId != event.currentTarget.id && (event.target.id == 'Cancelled' || event.target.id == 'Previous' || event.target.id == 'Upcoming')){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 38,
                "column": 29,
                "nodeType": "BinaryExpression",
                "source": "            if(prevfiscalId == 'Cancelled'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 41,
                "column": 34,
                "nodeType": "BinaryExpression",
                "source": "            else if(prevfiscalId == 'Previous'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 60,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('cmpName' + cmpName);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 61,
                "column": 20,
                "nodeType": "BinaryExpression",
                "source": "        if(cmpName == 'TouchPoints'){"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowAcc_Touchpoints\\Frontier_GrowAcc_TouchpointsHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 7,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('button pressed'+index);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 8,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Account Id' + accountId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 22,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log(\"retResponse\"+ JSON.stringify(retResponse));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 27,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Keyyyyyyyyytouchhh'+component.get(\"v.touchpointsList\"));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 36,
                "column": 22,
                "nodeType": "MemberExpression",
                "source": "                     console.log('Keyyyyyyyyy'+touchPointKeys);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 43,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Error');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_Grower_AccountList\\Frontier_Grower_AccountListController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 36,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Account List===========>'+uniqueId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 43,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('cmpName' + cmpName);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 44,
                "column": 20,
                "nodeType": "BinaryExpression",
                "source": "        if(cmpName == 'GrowerList'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 48,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(sortenable + 'sortenable');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 54,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log(searchKey +'searchKey');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 68,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log(direction + \"Direction\");"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 77,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Grower_AccountList=>'+accountId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 83,
                "column": 32,
                "nodeType": "MemberExpression",
                "source": "                               console.log('DealerGrowerList');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 106,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log('Exception Occured'+e);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 114,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('GrowerAccountList=>'+accountId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 120,
                "column": 32,
                "nodeType": "MemberExpression",
                "source": "                               console.log('DealerList');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_Grower_AccountList\\Frontier_Grower_AccountListHelper.js",
        "result": [
            {
                "ruleId": "no-debugger",
                "severity": 2,
                "message": "Unexpected 'debugger' statement.",
                "line": 6,
                "column": 9,
                "nodeType": "DebuggerStatement",
                "source": "        debugger;"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 7,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"================= Inside searchEmployee\" + searchKey);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 8,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"================= Inside page\" + page);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 23,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log(\"Account search employee\" + accounts);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 32,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('accountId,Sap Id,Accmu'+uniqueId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 51,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"Inside sort helper\");"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 52,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"Inside sort page\" + page);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 66,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log(\"Account search employee\" + accounts);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 72,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"Inside showPop\");"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 76,
                "column": 32,
                "nodeType": "MemberExpression",
                "source": "                               console.log('pop');"
            },
            {
                "ruleId": "no-debugger",
                "severity": 2,
                "message": "Unexpected 'debugger' statement.",
                "line": 83,
                "column": 9,
                "nodeType": "DebuggerStatement",
                "source": "        debugger;"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 111,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('accountId,Sap Id,Accmu'+uniqueId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 118,
                "column": 32,
                "nodeType": "MemberExpression",
                "source": "                               console.log('DealerList');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_Grower_Sales\\Frontier_Grower_SalesController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_Grower_Sales\\Frontier_Grower_SalesHelper.js",
        "result": [
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 14,
                "column": 56,
                "nodeType": "BinaryExpression",
                "source": "                    data: (component.get(\"v.CropData\") == 'General' || component.get(\"v.CropData\") == 'Corn'?[30000, 40000, 10000]:[40000, 30000, 20000])"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 14,
                "column": 100,
                "nodeType": "BinaryExpression",
                "source": "                    data: (component.get(\"v.CropData\") == 'General' || component.get(\"v.CropData\") == 'Corn'?[30000, 40000, 10000]:[40000, 30000, 20000])"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 22,
                "column": 56,
                "nodeType": "BinaryExpression",
                "source": "                    data: (component.get(\"v.CropData\") == 'General' || component.get(\"v.CropData\") == 'Corn'? [40000,10000,20000]:[30000,20000,10000]),"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 22,
                "column": 100,
                "nodeType": "BinaryExpression",
                "source": "                    data: (component.get(\"v.CropData\") == 'General' || component.get(\"v.CropData\") == 'Corn'? [40000,10000,20000]:[30000,20000,10000]),"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 30,
                "column": 56,
                "nodeType": "BinaryExpression",
                "source": "                    data: (component.get(\"v.CropData\") == 'General' || component.get(\"v.CropData\") == 'Corn'?[1000,20000,1000]:[2000,10000,2000])"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 30,
                "column": 100,
                "nodeType": "BinaryExpression",
                "source": "                    data: (component.get(\"v.CropData\") == 'General' || component.get(\"v.CropData\") == 'Corn'?[1000,20000,1000]:[2000,10000,2000])"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowerAccount_ActivitiesList\\Frontier_GrowerAccount_ActivitiesListController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 13,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('cmpName' +cmpName);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 14,
                "column": 21,
                "nodeType": "BinaryExpression",
                "source": "         if(cmpName == 'ActivitiesList'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 24,
                "column": 35,
                "nodeType": "BinaryExpression",
                "source": "        if(event.currentTarget.id != '' && component.get(\"v.prevId\") != '' && component.get(\"v.prevId\") != event.currentTarget.id){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 24,
                "column": 70,
                "nodeType": "BinaryExpression",
                "source": "        if(event.currentTarget.id != '' && component.get(\"v.prevId\") != '' && component.get(\"v.prevId\") != event.currentTarget.id){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 24,
                "column": 105,
                "nodeType": "BinaryExpression",
                "source": "        if(event.currentTarget.id != '' && component.get(\"v.prevId\") != '' && component.get(\"v.prevId\") != event.currentTarget.id){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 28,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"Event Target\"+event.currentTarget.id)"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 29,
                "column": 35,
                "nodeType": "BinaryExpression",
                "source": "        if(event.currentTarget.id != ''){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 74,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log(programIds+'/'+component.get(\"v.growerAcc\")+'/'+activitiesIds);"
            },
            {
                "ruleId": "no-alert",
                "severity": 2,
                "message": "Unexpected alert.",
                "line": 85,
                "column": 13,
                "nodeType": "CallExpression",
                "source": "            alert('Please Select All Activities of Same Type')"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 90,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('cancel');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 120,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('programIds=>'+programIds);console.log('activitiesIds=>'+activitiesIds);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 120,
                "column": 48,
                "nodeType": "MemberExpression",
                "source": "        console.log('programIds=>'+programIds);console.log('activitiesIds=>'+activitiesIds);"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowerAccount_ActivitiesList\\Frontier_GrowerAccount_ActivitiesListHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 6,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Inside Helper Target' + event.currentTarget.id);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 10,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Triggered Field'+triggeredField);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 12,
                "column": 71,
                "nodeType": "BinaryExpression",
                "source": "            else if(isPageChange && component.get(\"v.triggeredField\") != \"\"){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 34,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log(\"retResponse\"+ JSON.stringify(retResponse));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 38,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log(JSON.stringify(programEventlist));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 47,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Error');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 53,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"c:Frontier_GrowerAccount_ProgramEventsList\");"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 73,
                "column": 6,
                "nodeType": "MemberExpression",
                "source": "     console.log('Inside cancel Activity');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 81,
                "column": 2,
                "nodeType": "MemberExpression",
                "source": "\tconsole.log('----'+accId+taskId+programId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 92,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Success');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 95,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Error');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowerAccount_FarmSize\\Frontier_GrowerAccount_FarmSizeController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 24,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('fiscalyr' + fiscalyr);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 25,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('uom' + uom);"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowerAccount_FarmSize\\Frontier_GrowerAccount_FarmSizeHelper.js",
        "result": [
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'i' is already defined",
                "line": 46,
                "column": 25,
                "nodeType": "Identifier",
                "source": "                for(var i=0;i<growerAccFarmJson.growerAccountCroparea.length;i++){"
            },
            {
                "ruleId": "no-shadow",
                "severity": 2,
                "message": "'data' is already declared in the upper scope.",
                "line": 86,
                "column": 51,
                "nodeType": "Identifier",
                "source": "                    label : function(tooltipItem, data) {"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'data' is already defined",
                "line": 89,
                "column": 29,
                "nodeType": "Identifier",
                "source": "                        var data = data.datasets[0].data[tooltipItem.index]+'%';"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 97,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(ctx + 'ctx');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 103,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('myBarChart1 if'+myBarChart1);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 117,
                "column": 50,
                "nodeType": "BinaryExpression",
                "source": "            if(growerAccFarmJson.growerTotalArea != 'N/A'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 135,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('element'+JSON.stringify(document.getElementById('chartLegend')));"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'i' is already defined",
                "line": 136,
                "column": 25,
                "nodeType": "Identifier",
                "source": "                for(var i=0;i<element.length;i++){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 141,
                "column": 33,
                "nodeType": "BinaryExpression",
                "source": "                    if(styleVar != undefined){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 158,
                "column": 64,
                "nodeType": "BinaryExpression",
                "source": "        var cornArea = (component.find(\"Crop1\").get(\"v.value\") != undefined ? component.find(\"Crop1\").get(\"v.value\") : 0);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 159,
                "column": 63,
                "nodeType": "BinaryExpression",
                "source": "        var soyArea = (component.find(\"Crop2\").get(\"v.value\") != undefined ? component.find(\"Crop2\").get(\"v.value\") : 0);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 160,
                "column": 66,
                "nodeType": "BinaryExpression",
                "source": "        var cottonArea = (component.find(\"Crop3\").get(\"v.value\") != undefined ? component.find(\"Crop3\").get(\"v.value\") : 0);    "
            },
            {
                "ruleId": "no-alert",
                "severity": 2,
                "message": "Unexpected alert.",
                "line": 162,
                "column": 16,
                "nodeType": "CallExpression",
                "source": "               alert($A.get(\"$Label.c.GME_CROP_Quantity_Error\"));"
            },
            {
                "ruleId": "no-alert",
                "severity": 2,
                "message": "Unexpected alert.",
                "line": 198,
                "column": 21,
                "nodeType": "CallExpression",
                "source": "                    alert('Updated Successfully');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 204,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Error');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowerAccount_FarmSize\\Frontier_GrowerAccount_FarmSizeRenderer.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 5,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('rerender');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 7,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('element'+element);"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowerAccount_MasterComponent\\Frontier_GrowerAccount_MasterComponentController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowerAccount_MasterComponent\\Frontier_GrowerAccount_MasterComponentHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 3,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Inside Helper');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 61,
                "column": 32,
                "nodeType": "MemberExpression",
                "source": "                               console.log('AccountList');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 71,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Frontier_GrowerAccount_FarmSize');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 77,
                "column": 40,
                "nodeType": "MemberExpression",
                "source": "                                       console.log('growerFarmSize');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 94,
                "column": 40,
                "nodeType": "MemberExpression",
                "source": "                                       console.log('growerSales');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowerAccount_MasterComponent\\Frontier_GrowerAccount_MasterComponentRenderer.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowerAccount_Overview\\Frontier_GrowerAccount_OverviewController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 14,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"accDet\"+accDet);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 49,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(event.getParam(\"businessRole\"));"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowerAccount_Overview\\Frontier_GrowerAccount_OverviewHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 13,
                "column": 32,
                "nodeType": "MemberExpression",
                "source": "                               console.log('Inside Dynamic creation');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 16,
                "column": 32,
                "nodeType": "MemberExpression",
                "source": "                               console.log(compName);                                       "
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowerAccount_PreviousTouchPoints\\Frontier_GrowerAccount_PreviousTouchPointsController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowerAccount_PreviousTouchPoints\\Frontier_GrowerAccount_PreviousTouchPointsHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 14,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Error');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowerAccount_Program\\Frontier_GrowerAccount_ProgramController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 8,
                "column": 10,
                "nodeType": "MemberExpression",
                "source": "         console.log('ProgramList=>'+JSON.stringify(component.get(\"v.growerAcc\")));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 12,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"ispageChange out\" + ispageChange);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 13,
                "column": 26,
                "nodeType": "BinaryExpression",
                "source": "        if (ispageChange == undefined){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 14,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log(\"ispageChange\" + ispageChange);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 25,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Inside refresh list');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 29,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"ispageChange out\" + ispageChange);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 30,
                "column": 26,
                "nodeType": "BinaryExpression",
                "source": "        if (ispageChange == undefined){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 31,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log(\"ispageChange\" + ispageChange);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 39,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('cmpName' + cmpName);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 40,
                "column": 20,
                "nodeType": "BinaryExpression",
                "source": "        if(cmpName == 'Programs'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 41,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Page' + component.get(\"v.page\"));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 44,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('direction' + direction);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 49,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log('Page' + page);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 54,
                "column": 35,
                "nodeType": "BinaryExpression",
                "source": "        if(event.currentTarget.id != '' && component.get(\"v.prevId\") != '' && component.get(\"v.prevId\") != event.currentTarget.id){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 54,
                "column": 70,
                "nodeType": "BinaryExpression",
                "source": "        if(event.currentTarget.id != '' && component.get(\"v.prevId\") != '' && component.get(\"v.prevId\") != event.currentTarget.id){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 54,
                "column": 105,
                "nodeType": "BinaryExpression",
                "source": "        if(event.currentTarget.id != '' && component.get(\"v.prevId\") != '' && component.get(\"v.prevId\") != event.currentTarget.id){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 58,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"Event Target\"+event.target.id)"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 59,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"Current target\" + event.currentTarget.id);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 60,
                "column": 35,
                "nodeType": "BinaryExpression",
                "source": "        if(event.currentTarget.id != ''){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 75,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Inside cancel');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 77,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('cancel' + component.get(\"v.programId\"));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 104,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"reason\" + reason);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 110,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"ispageChange out\" + ispageChange);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 111,
                "column": 26,
                "nodeType": "BinaryExpression",
                "source": "        if (ispageChange == undefined){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 112,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log(\"ispageChange\" + ispageChange);"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowerAccount_Program\\Frontier_GrowerAccount_ProgramHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 3,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Inside list program');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 5,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('isInitialize' + isInitialize);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 9,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log(\"v.SortByField.\"+event.currentTarget.id);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 12,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Triggered Field get'+ triggeredField);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 14,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Triggered Field'+\"v.SortByField.\"+event.currentTarget.id);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 16,
                "column": 71,
                "nodeType": "BinaryExpression",
                "source": "            else if(ispageChange && component.get(\"v.triggeredField\") != \"\"){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 20,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Inside Program List');"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'page' is already defined",
                "line": 22,
                "column": 13,
                "nodeType": "Identifier",
                "source": "        var page = page || 1;"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 24,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Inside Program List');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 25,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Page' + page);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 29,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('dealerAccount' + dealerAccount);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 43,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Success');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 46,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Page after call back' + component.get(\"v.page\"));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 52,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('programlist' , programlist);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 56,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Error');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 62,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"c:Frontier_GrowerAccount_ProgramEventsList\");"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 71,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log(programId+accountId);  "
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 90,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('pgmAcc' + pgmAccId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 95,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log( accPgmId + ' ' + status + ' ' + reason);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 105,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Success');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 108,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Error');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 116,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Inside complete');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 118,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('pgmAcc' + pgmAccId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 123,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log( accPgmId + ' ' + status);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 133,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Success');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 136,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('popUpFlag' + popUpFlag);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 137,
                "column": 29,
                "nodeType": "BinaryExpression",
                "source": "                if(popUpFlag=='Allow'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 141,
                "column": 29,
                "nodeType": "BinaryExpression",
                "source": "                if(popUpFlag=='Not Allow'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 148,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Error');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 190,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"Inside showPop\" + message);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 196,
                "column": 32,
                "nodeType": "MemberExpression",
                "source": "                               console.log('pop');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 203,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"Inside showPop\" + message);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 209,
                "column": 32,
                "nodeType": "MemberExpression",
                "source": "                               console.log('pop');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowerAccount_ProgramEventsList\\Frontier_GrowerAccount_ProgramEventsListController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 14,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('cmpName' + cmpName);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 15,
                "column": 20,
                "nodeType": "BinaryExpression",
                "source": "        if(cmpName == 'PgmActivityList'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 26,
                "column": 35,
                "nodeType": "BinaryExpression",
                "source": "        if(event.currentTarget.id != '' && component.get(\"v.prevId\") != '' && component.get(\"v.prevId\") != event.currentTarget.id){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 26,
                "column": 70,
                "nodeType": "BinaryExpression",
                "source": "        if(event.currentTarget.id != '' && component.get(\"v.prevId\") != '' && component.get(\"v.prevId\") != event.currentTarget.id){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 26,
                "column": 105,
                "nodeType": "BinaryExpression",
                "source": "        if(event.currentTarget.id != '' && component.get(\"v.prevId\") != '' && component.get(\"v.prevId\") != event.currentTarget.id){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 30,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"Event Target\"+event.currentTarget.id)"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 31,
                "column": 35,
                "nodeType": "BinaryExpression",
                "source": "        if(event.currentTarget.id != ''){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 70,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('cancel');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowerAccount_ProgramEventsList\\Frontier_GrowerAccount_ProgramEventsListHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 6,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Program Id' + programId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 10,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Inside Helper Target' + event.currentTarget.id);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 12,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('&&&&&&&&&&&&&'+sortfield);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 16,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Triggered Field'+triggeredField);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 18,
                "column": 71,
                "nodeType": "BinaryExpression",
                "source": "            else if(isPageChange && component.get(\"v.triggeredField\") != \"\"){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 38,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log(\"retResponse\"+ retResponse);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 53,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Error');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 77,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Success');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 80,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Error');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 87,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"c:Frontier_GrowerAccount_UpdateTouchPoint\");"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 92,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('currentDateId' + currentDateId);"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowerAccount_RecordTouchPoint\\Frontier_GrowerAccount_RecordTouchPointController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 55,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Record Touch Point Season' + seasonKey);"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowerAccount_RecordTouchPoint\\Frontier_GrowerAccount_RecordTouchPointHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 3,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"Inside Helper\");"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 6,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(fieldDateValue + \"fieldDateValue\");"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 26,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log(\"message\" + message);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 68,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"Inside showPop\" + message);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 69,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"Inside showPop\" + accId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 76,
                "column": 32,
                "nodeType": "MemberExpression",
                "source": "                               console.log('pop');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowerAccount_Sales_Master\\Frontier_GrowerAccount_Sales_MasterController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowerAccount_Sales_Master\\Frontier_GrowerAccount_Sales_MasterHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 17,
                "column": 15,
                "nodeType": "MemberExpression",
                "source": "              console.log('growerAccSalesJson' + JSON.stringify(growerAccSalesJson));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 24,
                "column": 22,
                "nodeType": "MemberExpression",
                "source": "                     console.log('growerSalesFarmCrop' +growerSalesFarmCrop.sort());"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 46,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log(\"Errors\", response.getError());"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowerAccount_Sales\\Frontier_GrowerAccount_SalesController.js",
        "result": [
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 17,
                "column": 55,
                "nodeType": "BinaryExpression",
                "source": "        if(event.target.id != null && event.target.id == 'Area'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 22,
                "column": 48,
                "nodeType": "BinaryExpression",
                "source": "           if(prevId === '' && event.target.id != 'Units'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 26,
                "column": 25,
                "nodeType": "BinaryExpression",
                "source": "              if(prevId != '' && prevId != event.target.id){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 26,
                "column": 41,
                "nodeType": "BinaryExpression",
                "source": "              if(prevId != '' && prevId != event.target.id){"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowerAccount_Sales\\Frontier_GrowerAccount_SalesHelper.js",
        "result": [
            {
                "ruleId": null,
                "fatal": true,
                "severity": 2,
                "source": "            legend: {",
                "message": "Parsing error: Redefinition of property",
                "line": 170,
                "column": 13
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowerAccount_Sales\\Frontier_GrowerAccount_SalesRenderer.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowerAccount_TopProducts\\Frontier_GrowerAccount_TopProductsController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 3,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"Inside doinit\");"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowerAccount_TopProducts\\Frontier_GrowerAccount_TopProductsHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 3,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"Inside doinit\");"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 7,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log(\"topProdcutsValue\" + topProdcutsValue);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 10,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log(\"Success\");"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowerAccount_UpdateTouchPoint\\Frontier_GrowerAccount_UpdateTouchPointController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 3,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"Script Loaded\");"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 10,
                "column": 129,
                "nodeType": "BinaryExpression",
                "source": "        if(!(event.target.id).includes('activityOption') && !(event.target.id).includes('nonactivityOption') && event.target.id != ''){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 31,
                "column": 52,
                "nodeType": "BinaryExpression",
                "source": "                if(component.get(\"v.activityType\") != '' && component.get(\"v.activityType\") != 'null'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 31,
                "column": 93,
                "nodeType": "BinaryExpression",
                "source": "                if(component.get(\"v.activityType\") != '' && component.get(\"v.activityType\") != 'null'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 43,
                "column": 32,
                "nodeType": "BinaryExpression",
                "source": "            if(event.target.id != ''){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 61,
                "column": 52,
                "nodeType": "BinaryExpression",
                "source": "                if(component.get(\"v.activityType\") != '' && component.get(\"v.activityType\") != 'null'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 61,
                "column": 93,
                "nodeType": "BinaryExpression",
                "source": "                if(component.get(\"v.activityType\") != '' && component.get(\"v.activityType\") != 'null'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 73,
                "column": 32,
                "nodeType": "BinaryExpression",
                "source": "            if(event.target.id != ''){"
            },
            {
                "ruleId": "radix",
                "severity": 2,
                "message": "Missing radix parameter.",
                "line": 82,
                "column": 40,
                "nodeType": "CallExpression",
                "source": "        var totalprogramActivityGrid = parseInt(programActivityLastId.substring(programActivityLastId.length-1,programActivityLastId.length));"
            },
            {
                "ruleId": "no-alert",
                "severity": 2,
                "message": "Unexpected alert.",
                "line": 108,
                "column": 13,
                "nodeType": "CallExpression",
                "source": "            alert('Please Select a Program before adding a new Program Activities')"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 139,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log(events.target.id);"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'programSelectOption' is already defined",
                "line": 177,
                "column": 21,
                "nodeType": "Identifier",
                "source": "                var programSelectOption = document.createElement('option');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 208,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('event');"
            },
            {
                "ruleId": "radix",
                "severity": 2,
                "message": "Missing radix parameter.",
                "line": 234,
                "column": 40,
                "nodeType": "CallExpression",
                "source": "        var totalprogramActivityGrid = parseInt(programActivityLastId.substring(programActivityLastId.length-1,programActivityLastId.length));"
            },
            {
                "ruleId": "no-alert",
                "severity": 2,
                "message": "Unexpected alert.",
                "line": 258,
                "column": 13,
                "nodeType": "CallExpression",
                "source": "            alert('Please Select a Non-Program before adding a new Non-Program Activities')"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 289,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log(events.target.id);"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'programSelectOption' is already defined",
                "line": 325,
                "column": 21,
                "nodeType": "Identifier",
                "source": "                var programSelectOption = document.createElement('option');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 353,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('event');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 434,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(component.get(\"v.popUpHeader\").split(' ')[0]);"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'activitySelectOption' is already defined",
                "line": 540,
                "column": 21,
                "nodeType": "Identifier",
                "source": "                var activitySelectOption = document.createElement('option');"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'activitySelectOption' is already defined",
                "line": 589,
                "column": 21,
                "nodeType": "Identifier",
                "source": "                var activitySelectOption = document.createElement('option');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowerAccount_UpdateTouchPoint\\Frontier_GrowerAccount_UpdateTouchPointHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 13,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('accountId=>'+accountId);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 21,
                "column": 59,
                "nodeType": "BinaryExpression",
                "source": "            if(component.get(\"v.growerAcc\").split('/')[4] != ''){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 32,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('currentDate=>'+currentDate.toISOString());"
            },
            {
                "ruleId": "no-debugger",
                "severity": 2,
                "message": "Unexpected 'debugger' statement.",
                "line": 59,
                "column": 9,
                "nodeType": "DebuggerStatement",
                "source": "        debugger;"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 64,
                "column": 12,
                "nodeType": "MemberExpression",
                "source": "           console.log('presentDate=>'+(presentDate.toISOString()).split('T')[1]);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 68,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log('parsedDate.toISOString()=>'+parsedDate.toISOString());"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 73,
                "column": 59,
                "nodeType": "BinaryExpression",
                "source": "            if(component.get(\"v.growerAcc\").split('/')[3] != ''){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 84,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log('Date1' + date1);"
            },
            {
                "ruleId": "no-irregular-whitespace",
                "severity": 2,
                "message": "Irregular whitespace not allowed",
                "line": 86,
                "column": 16,
                "nodeType": "Program",
                "source": "            var monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];"
            },
            {
                "ruleId": "no-irregular-whitespace",
                "severity": 2,
                "message": "Irregular whitespace not allowed",
                "line": 86,
                "column": 27,
                "nodeType": "Program",
                "source": "            var monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];"
            },
            {
                "ruleId": "no-irregular-whitespace",
                "severity": 2,
                "message": "Irregular whitespace not allowed",
                "line": 86,
                "column": 29,
                "nodeType": "Program",
                "source": "            var monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];"
            },
            {
                "ruleId": "no-irregular-whitespace",
                "severity": 2,
                "message": "Irregular whitespace not allowed",
                "line": 86,
                "column": 41,
                "nodeType": "Program",
                "source": "            var monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];"
            },
            {
                "ruleId": "no-irregular-whitespace",
                "severity": 2,
                "message": "Irregular whitespace not allowed",
                "line": 86,
                "column": 53,
                "nodeType": "Program",
                "source": "            var monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];"
            },
            {
                "ruleId": "no-irregular-whitespace",
                "severity": 2,
                "message": "Irregular whitespace not allowed",
                "line": 86,
                "column": 62,
                "nodeType": "Program",
                "source": "            var monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];"
            },
            {
                "ruleId": "no-irregular-whitespace",
                "severity": 2,
                "message": "Irregular whitespace not allowed",
                "line": 86,
                "column": 71,
                "nodeType": "Program",
                "source": "            var monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];"
            },
            {
                "ruleId": "no-irregular-whitespace",
                "severity": 2,
                "message": "Irregular whitespace not allowed",
                "line": 86,
                "column": 78,
                "nodeType": "Program",
                "source": "            var monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];"
            },
            {
                "ruleId": "no-irregular-whitespace",
                "severity": 2,
                "message": "Irregular whitespace not allowed",
                "line": 86,
                "column": 93,
                "nodeType": "Program",
                "source": "            var monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];"
            },
            {
                "ruleId": "no-irregular-whitespace",
                "severity": 2,
                "message": "Irregular whitespace not allowed",
                "line": 86,
                "column": 103,
                "nodeType": "Program",
                "source": "            var monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];"
            },
            {
                "ruleId": "no-irregular-whitespace",
                "severity": 2,
                "message": "Irregular whitespace not allowed",
                "line": 86,
                "column": 116,
                "nodeType": "Program",
                "source": "            var monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];"
            },
            {
                "ruleId": "no-irregular-whitespace",
                "severity": 2,
                "message": "Irregular whitespace not allowed",
                "line": 86,
                "column": 127,
                "nodeType": "Program",
                "source": "            var monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];"
            },
            {
                "ruleId": "no-irregular-whitespace",
                "severity": 2,
                "message": "Irregular whitespace not allowed",
                "line": 86,
                "column": 139,
                "nodeType": "Program",
                "source": "            var monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 90,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log('D1'+monthNames[d1.getMonth()] + '---'+ days[d1.getDay()]);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 93,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log('touchPointDate' + touchPointDate);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 96,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('AccountId' +accId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 97,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('eventId' +eventId);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 116,
                "column": 46,
                "nodeType": "BinaryExpression",
                "source": "                    if(selectedActivitiesIds != ''){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 128,
                "column": 53,
                "nodeType": "BinaryExpression",
                "source": "                    if(retResponse.touchPointStatus != 'null'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 132,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log(\"Response\"+ JSON.stringify(retResponse));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 137,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log(\"Response====>\"+ retResponse.selectedProgramsList);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 150,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log(component.get(\"v.selectedActivitiesFromActivityListArray\"));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 151,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log(JSON.stringify(component.get(\"v.selectedNonProgramActivitiesList\")));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 152,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('programIdActivityMap=>'+JSON.stringify(component.get(\"v.programIdActivityMap\")));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 155,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Error');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 169,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(document.getElementById(event.target.id).value);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 174,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(JSON.stringify(component.get(\"v.programDependentActivities\")));"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 175,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "        if(event.target.id != ''){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 184,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(event.target.id);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 185,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "        if(event.target.id != ''){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 205,
                "column": 52,
                "nodeType": "BinaryExpression",
                "source": "                if(component.get(\"v.activityType\") != '' && component.get(\"v.activityType\") != 'null'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 205,
                "column": 93,
                "nodeType": "BinaryExpression",
                "source": "                if(component.get(\"v.activityType\") != '' && component.get(\"v.activityType\") != 'null'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 217,
                "column": 32,
                "nodeType": "BinaryExpression",
                "source": "            if(event.target.id != ''){"
            },
            {
                "ruleId": "no-debugger",
                "severity": 2,
                "message": "Unexpected 'debugger' statement.",
                "line": 246,
                "column": 17,
                "nodeType": "DebuggerStatement",
                "source": "                debugger;"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 248,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('program=>'+document.getElementById('program_'+i).value);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 255,
                "column": 33,
                "nodeType": "MemberExpression",
                "source": "                                console.log(document.getElementById('programActivites_'+i).options[j].value);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 287,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('programActivityMap=>'+JSON.stringify(programActivityMap));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 288,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('programDomIdAndProgramIdMap=>'+JSON.stringify(programDomIdAndProgramIdMap));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 289,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('programDomIdAndProgramNameMap=>'+JSON.stringify(programDomIdAndProgramNameMap));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 293,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('savedProgramActivityMap=>'+JSON.stringify(component.get(\"v.savedProgramActivityMap\")));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 295,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('savedProgramActivityMap=>'+JSON.stringify(component.get(\"v.savedProgramActivityMap\")));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 296,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('savedNonProgramActivityMap=>'+JSON.stringify(component.get(\"v.savedNonProgramActivityMap\")));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 297,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('deletedActivityList=>'+JSON.stringify(component.get(\"v.deletedActivityList\"))); "
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 298,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('deletedNonProgramList=>'+JSON.stringify(component.get(\"v.deletedNonProgramList\"))); "
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 299,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('deletedProgramList=>'+JSON.stringify(component.get(\"v.deletedProgramList\"))); "
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 300,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('deletedNonActivityList=>'+JSON.stringify(component.get(\"v.deletedNonActivityList\")));"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'key' is already defined",
                "line": 309,
                "column": 17,
                "nodeType": "Identifier",
                "source": "        for(var key in component.get(\"v.savedProgramActivityMap\")){"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'key' is already defined",
                "line": 314,
                "column": 17,
                "nodeType": "Identifier",
                "source": "        for(var key in component.get(\"v.savedNonProgramActivityMap\")){"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'key' is already defined",
                "line": 317,
                "column": 17,
                "nodeType": "Identifier",
                "source": "        for(var key in component.get(\"v.savedNonProgramActivityMap\")){"
            },
            {
                "ruleId": "no-alert",
                "severity": 2,
                "message": "Unexpected alert.",
                "line": 350,
                "column": 13,
                "nodeType": "CallExpression",
                "source": "            alert('Please Select the Program And Activities before saving Touchpoint');"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 370,
                "column": 51,
                "nodeType": "BinaryExpression",
                "source": "        if(component.get(\"v.deletedActivityList\") == 'null'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 398,
                "column": 54,
                "nodeType": "BinaryExpression",
                "source": "        if(component.get(\"v.deletedNonActivityList\") == 'null'){"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'activitySelectOption' is already defined",
                "line": 459,
                "column": 21,
                "nodeType": "Identifier",
                "source": "                var activitySelectOption = document.createElement('option');"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'activitySelectOption' is already defined",
                "line": 471,
                "column": 25,
                "nodeType": "Identifier",
                "source": "                    var activitySelectOption = document.createElement('option');"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'activitySelectOption' is already defined",
                "line": 534,
                "column": 21,
                "nodeType": "Identifier",
                "source": "                var activitySelectOption = document.createElement('option');"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'activitySelectOption' is already defined",
                "line": 547,
                "column": 25,
                "nodeType": "Identifier",
                "source": "                    var activitySelectOption = document.createElement('option');"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 566,
                "column": 53,
                "nodeType": "BinaryExpression",
                "source": "        if(component.get(\"v.deletedNonProgramList\") == 'null'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 579,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('component.get(\"v.deletedNonProgramList\")=>'+JSON.stringify(component.get(\"v.deletedNonProgramList\")));"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 588,
                "column": 50,
                "nodeType": "BinaryExpression",
                "source": "        if(component.get(\"v.deletedProgramList\") == 'null'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 601,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('component.get(\"v.deletedProgramList\")=>'+JSON.stringify(component.get(\"v.deletedProgramList\")));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 634,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('program=>'+document.getElementById(programSelectOption+i).value);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 641,
                "column": 33,
                "nodeType": "MemberExpression",
                "source": "                                console.log(document.getElementById(programActivitySelectOption+i).options[j].value);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 673,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('programActivityMap=>'+JSON.stringify(programActivityMap));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 674,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('programDomIdAndProgramIdMap=>'+JSON.stringify(programDomIdAndProgramIdMap));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 675,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('programDomIdAndProgramNameMap=>'+JSON.stringify(programDomIdAndProgramNameMap));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 679,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('savedNonProgramActivityMap=>'+JSON.stringify(component.get(\"v.savedNonProgramActivityMap\")));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 709,
                "column": 16,
                "nodeType": "MemberExpression",
                "source": "               console.log('growId=>'+component.get(\"v.growerAcc\").split('/')[1]);"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'cmpEvent' is already defined",
                "line": 717,
                "column": 20,
                "nodeType": "Identifier",
                "source": "               var cmpEvent = component.getEvent(\"redirectToDealerDetail\");"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 718,
                "column": 16,
                "nodeType": "MemberExpression",
                "source": "               console.log('growId=>'+component.get(\"v.growerAcc\").split('/')[1]);"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'cmpEvent' is already defined",
                "line": 727,
                "column": 20,
                "nodeType": "Identifier",
                "source": "               var cmpEvent = component.getEvent(\"redirectToDealerDetail\");"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 728,
                "column": 16,
                "nodeType": "MemberExpression",
                "source": "               console.log('growId=>'+component.get(\"v.growerAcc\").split('/')[1]);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 749,
                "column": 48,
                "nodeType": "MemberExpression",
                "source": "                                               console.log('GrowerList');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 767,
                "column": 48,
                "nodeType": "MemberExpression",
                "source": "                                               console.log('dealersList');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 787,
                "column": 35,
                "nodeType": "MemberExpression",
                "source": "                                  console.log('dealersGrower');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 799,
                "column": 35,
                "nodeType": "MemberExpression",
                "source": "                                  console.log('GrowerDealer');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 811,
                "column": 35,
                "nodeType": "MemberExpression",
                "source": "                                  console.log('TouchpointList');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowerAccount_UpdateTouchPoint\\Frontier_GrowerAccount_UpdateTouchPointRenderer.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowerAccountByRadlChart\\Frontier_GrowerAccountByRadlChartController.js",
        "result": [
            {
                "ruleId": null,
                "fatal": true,
                "severity": 2,
                "source": "});",
                "message": "Parsing error: Unexpected token }",
                "line": 11,
                "column": 1
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowerAccountByRadlChart\\Frontier_GrowerAccountByRadlChartHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 4,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('-----Acccount coverage chart-----' );"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 19,
                "column": 5,
                "nodeType": "MemberExpression",
                "source": "\t\t\t\tconsole.log('Success');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 23,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('type' + component.get(\"v.accCoverageLbl\"));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 26,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Develop');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 30,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Retain');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 34,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Retain');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 36,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside retain 0' + retainAccCount);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 39,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Retain');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 44,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('key' + key );"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 46,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Develop'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 48,
                "column": 25,
                "nodeType": "MemberExpression",
                "source": "                        console.log('Develop1'+ developAccCount);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 50,
                "column": 29,
                "nodeType": "BinaryExpression",
                "source": "                     if(key == 'Acquire'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 53,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Retain'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 55,
                "column": 25,
                "nodeType": "MemberExpression",
                "source": "                        console.log('Inside retain' + retainAccCount);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 58,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Light Touch'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 63,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Develop');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 67,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Retain');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 71,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Retain');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 75,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Retain');"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'key' is already defined",
                "line": 78,
                "column": 25,
                "nodeType": "Identifier",
                "source": "                for(var key in accCoverageRADL.accPgmRadlMap){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 79,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('key' + key );"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 80,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Develop'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 82,
                "column": 25,
                "nodeType": "MemberExpression",
                "source": "                        console.log('Develop2'+ developAccCount);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 84,
                "column": 29,
                "nodeType": "BinaryExpression",
                "source": "                     if(key == 'Acquire'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 87,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Retain'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 90,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Light Touch'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 95,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Develop');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 99,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Retain');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 103,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Retain');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 107,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Retain');"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'key' is already defined",
                "line": 110,
                "column": 26,
                "nodeType": "Identifier",
                "source": "                 for(var key in accCoverageRADL.accTouchRadlMap){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 111,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('key' + key );"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 112,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Develop'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 114,
                "column": 25,
                "nodeType": "MemberExpression",
                "source": "                        console.log('Develop3'+ developAccCount);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 116,
                "column": 29,
                "nodeType": "BinaryExpression",
                "source": "                     if(key == 'Acquire'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 119,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Retain'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 122,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Light Touch'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 127,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Develop');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 131,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Retain');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 135,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Retain');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 139,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Retain');"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'key' is already defined",
                "line": 143,
                "column": 26,
                "nodeType": "Identifier",
                "source": "                 for(var key in accCoverageRADL.accRadlCoverMap){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 144,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('key' + key );"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 145,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Develop'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 147,
                "column": 25,
                "nodeType": "MemberExpression",
                "source": "                        console.log('Develop3'+ developAccCount);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 149,
                "column": 29,
                "nodeType": "BinaryExpression",
                "source": "                     if(key == 'Acquire'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 152,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Retain'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 155,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Light Touch'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 160,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Develop');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 164,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Retain');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 168,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Retain');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 172,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Retain');"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'key' is already defined",
                "line": 175,
                "column": 25,
                "nodeType": "Identifier",
                "source": "                for(var key in accCoverageRADL.TouchpointcountRadlMap){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 176,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('key' + key );"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 177,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Develop'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 179,
                "column": 25,
                "nodeType": "MemberExpression",
                "source": "                        console.log('Develop4'+ developAccCount);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 181,
                "column": 29,
                "nodeType": "BinaryExpression",
                "source": "                     if(key == 'Acquire'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 184,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Retain'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 187,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Light Touch'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 193,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Develop');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 197,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Retain');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 201,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Retain');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 205,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Retain');"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'key' is already defined",
                "line": 208,
                "column": 25,
                "nodeType": "Identifier",
                "source": "                for(var key in accCoverageRADL.avgVisitRadlMap){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 209,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('key' + key );"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 210,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Develop'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 212,
                "column": 25,
                "nodeType": "MemberExpression",
                "source": "                        console.log('Develop6'+ developAccCount);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 214,
                "column": 29,
                "nodeType": "BinaryExpression",
                "source": "                     if(key == 'Acquire'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 217,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Retain'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 220,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Light Touch'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 235,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Errors', response.getError());"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowerAccountDashboard_GrowerList\\Frontier_GrowerAccountDashboard_GrowerListController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 8,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('cmpName' +cmpName);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 9,
                "column": 21,
                "nodeType": "BinaryExpression",
                "source": "         if(cmpName == 'DealerDashboardList'){"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowerAccountDashboard_GrowerList\\Frontier_GrowerAccountDashboard_GrowerListHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 18,
                "column": 22,
                "nodeType": "MemberExpression",
                "source": "                     console.log(\"retResponse\"+ JSON.stringify(retResponse));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 20,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log(retResponse[0].Count + 'Total');"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 26,
                "column": 44,
                "nodeType": "BinaryExpression",
                "source": "                else if(retResponse.length == 0){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 34,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Error');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowerAccountDashboard_Master\\Frontier_GrowerAccountDashboard_MasterController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowerAccountDashboard_Master\\Frontier_GrowerAccountDashboard_MasterHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 19,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log(\"retResponse\"+ JSON.stringify(retResponse));"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'i' is already defined",
                "line": 25,
                "column": 25,
                "nodeType": "Identifier",
                "source": "                for(var i=0;i< retResponse.croptypes.length;i++){"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowerAccountDashboard\\Frontier_GrowerAccountDashboardController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 49,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"c:Frontier_AccountDetailViewComponent=>\"+event.getParam(\"accId\"));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 50,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"c:Frontier_AccountDetailViewComponent=>\"+event.getParam(\"sapId\"));"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowerAccountDashboard\\Frontier_GrowerAccountDashboardHelper.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowerAccountList\\Frontier_GrowerAccountListController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 36,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Account List===========>'+uniqueId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 43,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('cmpName' + cmpName);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 44,
                "column": 20,
                "nodeType": "BinaryExpression",
                "source": "        if(cmpName == 'DealerGrowerList'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 49,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log(sortenable + 'sortenable');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 55,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log(searchKey +'searchKey');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 69,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log(direction + \"Direction\");"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 107,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log('Exception Occured'+e);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 120,
                "column": 32,
                "nodeType": "MemberExpression",
                "source": "                               console.log('GrowerList');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 128,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('GrowerAccountList=>'+accountId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 134,
                "column": 32,
                "nodeType": "MemberExpression",
                "source": "                               console.log('DealerList');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowerAccountList\\Frontier_GrowerAccountListHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 6,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"================= Inside searchEmployee\" + searchKey);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 7,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"================= Inside page\" + page);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 21,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log(\"Account search employee\" + accounts);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 28,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('accountId,Sap Id,Accmu'+uniqueId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 45,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"Inside sort helper\");"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 46,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"Inside sort page\" + page);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 49,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('&&&&&&&&&'+acId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 64,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log(\"Account search employee\" + accounts);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 70,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"Inside showPop\");"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 74,
                "column": 32,
                "nodeType": "MemberExpression",
                "source": "                               console.log('pop');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 81,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('accountId,Sap Id,Accmu'+uniqueId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 88,
                "column": 32,
                "nodeType": "MemberExpression",
                "source": "                               console.log('DealerList');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowerAccountTracking_Table\\Frontier_GrowerAccountTracking_TableController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 5,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"checking\"+productID);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 16,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"Hello=>\"+event.target.id);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 21,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"Finished\");"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowerAccountTracking_Table\\Frontier_GrowerAccountTracking_TableHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 4,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('page' + page);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 8,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('sortFieldName' + component.get(\"v.object\"));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 9,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('sortFieldName' + component.get(\"v.pageSize\"));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 19,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log(\"State\" + state);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 22,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log(\"State\" + state);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 23,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('retRecords=>'+ response.getReturnValue());"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 30,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Error');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowerAccountTrackingDashboard\\Frontier_GrowerAccountTrackingDashboardController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowerAccountTrackingDashboard\\Frontier_GrowerAccountTrackingDashboardHelper.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowerAccountTrackingTable\\Frontier_GrowerAccountTrackingTableController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowerAccountTrackingTable\\Frontier_GrowerAccountTrackingTableHelper.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowerProfileDetails\\Frontier_GrowerProfileDetailsController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 94,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('GrowerProfileDetail=>'+component.get(\"v.growerId\"));"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowerProfileDetails\\Frontier_GrowerProfileDetailsHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 9,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Inside Grower Profile');        "
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 20,
                "column": 15,
                "nodeType": "MemberExpression",
                "source": "              console.log('growerAccountDetailJson' + JSON.stringify(growerAccountDetailJson));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 21,
                "column": 16,
                "nodeType": "MemberExpression",
                "source": "               console.log('growerAccountDetailJson.growerSeason' + growerAccountDetailJson.growerSeason);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 23,
                "column": 14,
                "nodeType": "MemberExpression",
                "source": "             console.log('growerAccountDetailJson.growerSeason' + growerAccountDetailJson.growerSeason);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 30,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log(\"Errors\", response.getError());"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowersDealerList\\Frontier_GrowersDealerListController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 44,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('cmpName' + cmpName);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 45,
                "column": 20,
                "nodeType": "BinaryExpression",
                "source": "        if(cmpName == 'GrowerDealerList'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 50,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(sortenable + 'sortenable');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 56,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log(searchKey +'searchKey');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 70,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log(direction + \"Direction\");"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 94,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log('Exception Occured'+e);"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowersDealerList\\Frontier_GrowersDealerListHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 6,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"================= Inside getDealerAccount\" + searchKey);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 7,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"================= Inside page\" + page);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 21,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log(\"Account search employee\" + accounts);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 28,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('accountId,Sap Id,Accmu'+uniqueId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 35,
                "column": 32,
                "nodeType": "MemberExpression",
                "source": "                               console.log('AccountList');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 42,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"c:Frontier_GrowerAccount_Overview\");"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 44,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('accountId,Sap Id,Accmu'+uniqueId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 77,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"Inside sort helper\");"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 78,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"Inside sort page\" + page);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 93,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log(\"Dealer Account=>\" + accounts);"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowerTable_AcresChart\\Frontier_GrowerTable_AcresChartController.js",
        "result": [
            {
                "ruleId": null,
                "fatal": true,
                "severity": 2,
                "source": "                    display: true,",
                "message": "Parsing error: Redefinition of property",
                "line": 64,
                "column": 21
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowerTable_AcresChart\\Frontier_GrowerTable_AcresChartRenderer.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowerTouchpointbyTypeChart\\Frontier_GrowerTouchpointbyTypeChartController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowerTouchpointbyTypeChart\\Frontier_GrowerTouchpointbyTypeChartHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 4,
                "column": 1,
                "nodeType": "MemberExpression",
                "source": "console.log('-----Touchpointchart-----' );"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 19,
                "column": 5,
                "nodeType": "MemberExpression",
                "source": "\t\t\t\tconsole.log('Success');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 23,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('type' + component.get(\"v.touchtype\"));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 24,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('check value' + touchpointByVisit.totalTouchMap.hasOwnProperty('Retain'));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 26,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Develop');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 30,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Retain');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 34,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Retain');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 38,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Retain');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 43,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('key' + key );"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 45,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Develop'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 48,
                "column": 29,
                "nodeType": "BinaryExpression",
                "source": "                     if(key == 'Acquire'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 51,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Retain'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 55,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Light Touch'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 60,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Develop');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 64,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Retain');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 68,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Retain');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 72,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Retain');"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'key' is already defined",
                "line": 75,
                "column": 25,
                "nodeType": "Identifier",
                "source": "                for(var key in touchpointByVisit.emailTouchMap){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 76,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('key' + key );"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 77,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Develop'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 80,
                "column": 29,
                "nodeType": "BinaryExpression",
                "source": "                     if(key == 'Acquire'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 83,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Retain'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 86,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Light Touch'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 91,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Develop');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 95,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Retain');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 99,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Retain');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 103,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Retain');"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'key' is already defined",
                "line": 106,
                "column": 26,
                "nodeType": "Identifier",
                "source": "                 for(var key in touchpointByVisit.visitTouchMap){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 107,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('key' + key );"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 108,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Develop'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 111,
                "column": 29,
                "nodeType": "BinaryExpression",
                "source": "                     if(key == 'Acquire'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 114,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Retain'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 117,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Light Touch'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 122,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Develop');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 126,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Retain');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 130,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Retain');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 134,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Retain');"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'key' is already defined",
                "line": 137,
                "column": 25,
                "nodeType": "Identifier",
                "source": "                for(var key in touchpointByVisit.webTouchMap){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 138,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('key' + key );"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 139,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Develop'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 142,
                "column": 29,
                "nodeType": "BinaryExpression",
                "source": "                     if(key == 'Acquire'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 145,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Retain'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 148,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Light Touch'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 153,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Develop');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 157,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Retain');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 161,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Retain');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 165,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Retain');"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'key' is already defined",
                "line": 168,
                "column": 25,
                "nodeType": "Identifier",
                "source": "                for(var key in touchpointByVisit.chatTouchMap){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 169,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('key' + key );"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 170,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Develop'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 173,
                "column": 29,
                "nodeType": "BinaryExpression",
                "source": "                     if(key == 'Acquire'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 176,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Retain'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 179,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Light Touch'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 184,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Develop');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 188,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Retain');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 192,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Retain');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 196,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Retain');"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'key' is already defined",
                "line": 199,
                "column": 25,
                "nodeType": "Identifier",
                "source": "                for(var key in touchpointByVisit.callTouchMap){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 200,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('key' + key );"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 201,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Develop'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 204,
                "column": 29,
                "nodeType": "BinaryExpression",
                "source": "                     if(key == 'Acquire'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 207,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Retain'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 210,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Light Touch'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 218,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('D' + component.get(\"v.dtypecount\"));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 219,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('A' + component.get(\"v.acqtypecount\"));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 220,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('R' + component.get(\"v.rtypecount\"));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 221,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('L' + component.get(\"v.ltypecount\"));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 225,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Errors', response.getError());"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowerTouchpointsbyMonth_Chart\\Frontier_GrowerTouchpointsbyMonth_ChartController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_GrowerTouchpointsbyMonth_Chart\\Frontier_GrowerTouchpointsbyMonth_ChartHelper.js",
        "result": [
            {
                "ruleId": null,
                "fatal": true,
                "severity": 2,
                "source": "            legend: {",
                "message": "Parsing error: Redefinition of property",
                "line": 167,
                "column": 13
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_LocationBasedActivities\\Frontier_LocationBasedActivitiesController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 5,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log(position.coords.longitude);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 17,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log(position.coords.longitude);"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_LocationBasedActivities\\Frontier_LocationBasedActivitiesHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 27,
                "column": 40,
                "nodeType": "MemberExpression",
                "source": "                                       console.log('Frontier_GoogleMapComponent');                                       "
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_LocationBasedActivities\\Frontier_LocationBasedActivitiesRenderer.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_ManagerDashboard\\Frontier_ManagerDashboardController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_ManagerDashboard\\Frontier_ManagerDashboardHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 5,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('crop--------'+crop+'season============'+season +'selectedOrAllSalesRep==>'+component.find(\"salesrep\").get(\"v.value\"));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 16,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Success');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 22,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('JSON.parse---------------'+JSON.stringify(JSON.parse(radlCoverage[2])));"
            },
            {
                "ruleId": "no-shadow",
                "severity": 2,
                "message": "'season' is already declared in the upper scope.",
                "line": 23,
                "column": 21,
                "nodeType": "Identifier",
                "source": "                var season = JSON.parse(radlCoverage[0]);"
            },
            {
                "ruleId": "no-shadow",
                "severity": 2,
                "message": "'crop' is already declared in the upper scope.",
                "line": 24,
                "column": 21,
                "nodeType": "Identifier",
                "source": "                var crop = JSON.parse(radlCoverage[1]);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 28,
                "column": 52,
                "nodeType": "BinaryExpression",
                "source": "                if(component.get(\"v.isInitialize\") == false){"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'i' is already defined",
                "line": 46,
                "column": 33,
                "nodeType": "Identifier",
                "source": "                        for(var i=0;i< season.length;i++){"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'i' is already defined",
                "line": 51,
                "column": 33,
                "nodeType": "Identifier",
                "source": "                        for(var i=0;i< crop.length;i++){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 64,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Error occured');"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 71,
                "column": 41,
                "nodeType": "BinaryExpression",
                "source": "        if(component.get(\"v.loadChart\") == true){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 80,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(cmp != undefined){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 81,
                "column": 25,
                "nodeType": "MemberExpression",
                "source": "                        console.log('New Cmp');"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 95,
                "column": 29,
                "nodeType": "BinaryExpression",
                "source": "                    if(comp != undefined){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 109,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(cmp != undefined){"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_MarqueeComponent\\Frontier_MarqueeComponentHelper.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_MasterHeader\\Frontier_MasterHeaderController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_OpportunitySalesComponent\\Frontier_OpportunitySalesComponentController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_outputShowMoreText\\Frontier_outputShowMoreTextController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 11,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(thisId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 15,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(thisValue);"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_Paginator\\Frontier_PaginatorController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_Paginator\\Frontier_PaginatorHelper.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_Paginator\\Frontier_PaginatorRenderer.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_Pgm_Plang_Review_AccountList\\Frontier_Pgm_Plang_Review_AccountListController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 8,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('--------'+component.get(\"v.accounts\"));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 15,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('cmpName' + cmpName);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 16,
                "column": 20,
                "nodeType": "BinaryExpression",
                "source": "        if(cmpName == 'ReviewAccountList'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 28,
                "column": 35,
                "nodeType": "BinaryExpression",
                "source": "        if(event.currentTarget.id != '' && component.get(\"v.prevId\") != '' && component.get(\"v.prevId\") != event.currentTarget.id){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 28,
                "column": 70,
                "nodeType": "BinaryExpression",
                "source": "        if(event.currentTarget.id != '' && component.get(\"v.prevId\") != '' && component.get(\"v.prevId\") != event.currentTarget.id){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 28,
                "column": 105,
                "nodeType": "BinaryExpression",
                "source": "        if(event.currentTarget.id != '' && component.get(\"v.prevId\") != '' && component.get(\"v.prevId\") != event.currentTarget.id){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 32,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"Event Target\"+event.currentTarget.id)"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 33,
                "column": 35,
                "nodeType": "BinaryExpression",
                "source": "        if(event.currentTarget.id != ''){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 42,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Inside toggle');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 45,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('uniqueId'+uniqueId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 47,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('ProgramId' + ProgramId);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 49,
                "column": 25,
                "nodeType": "BinaryExpression",
                "source": "        if(showHideList =='Hide Account List'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 53,
                "column": 25,
                "nodeType": "BinaryExpression",
                "source": "        if(showHideList =='Show Account List'){"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_Pgm_Plang_Review_AccountList\\Frontier_Pgm_Plang_Review_AccountListHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 3,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Inside AccountList Helper');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 13,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Inside Helper Target' + event.currentTarget.id);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 17,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Triggered Field'+triggeredField);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 19,
                "column": 71,
                "nodeType": "BinaryExpression",
                "source": "            else if(isPageChange && component.get(\"v.triggeredField\") != \"\"){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 24,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('programId'+programId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 35,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('programId CLLBCK'+programId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 41,
                "column": 25,
                "nodeType": "MemberExpression",
                "source": "                        console.log('programId RESPONSE'+programId);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 43,
                "column": 50,
                "nodeType": "BinaryExpression",
                "source": "                        if( response1.getState() == 'SUCCESS'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 47,
                "column": 29,
                "nodeType": "MemberExpression",
                "source": "                            console.log(\"retResponse\"+ JSON.stringify(retResponse[1]));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 69,
                "column": 29,
                "nodeType": "MemberExpression",
                "source": "                            console.log('Error');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_Pgm_Plang_Review\\Frontier_Pgm_Plang_ReviewController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 5,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Get Programs on Do init');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 10,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('cmpName' + cmpName);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 11,
                "column": 20,
                "nodeType": "BinaryExpression",
                "source": "        if(cmpName == 'PgmPlngReview'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 18,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('page---' +page);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 39,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Inside submit Controller');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_Pgm_Plang_Review\\Frontier_Pgm_Plang_ReviewHelper.js",
        "result": [
            {
                "ruleId": null,
                "fatal": true,
                "severity": 2,
                "source": "});",
                "message": "Parsing error: Unexpected token }",
                "line": 117,
                "column": 1
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_Pgm_Planning_BudgetChart\\Frontier_Pgm_Planning_BudgetChartController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 3,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Inside chart');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_Pgm_Planning_BudgetChart\\Frontier_Pgm_Planning_BudgetChartHelper.js",
        "result": [
            {
                "ruleId": null,
                "fatal": true,
                "severity": 2,
                "source": "                    Chart.helpers.each(self.data.datasets.forEach((dataset, datasetIndex) => {",
                "message": "Parsing error: Parenthesized pattern",
                "line": 135,
                "column": 67
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_PopUp\\Frontier_PopUpController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 5,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"message init\" + message);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 6,
                "column": 39,
                "nodeType": "BinaryExpression",
                "source": "        if(message != null && message ==\"visitrecord\"){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 9,
                "column": 44,
                "nodeType": "BinaryExpression",
                "source": "        else if(message != null && message ==\"followuprecord\")"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 11,
                "column": 44,
                "nodeType": "BinaryExpression",
                "source": "        else if(message != null && message ==\"E-Mail has been sent\")"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 13,
                "column": 44,
                "nodeType": "BinaryExpression",
                "source": "        else if(message != null && message ==\"Program Completed\")"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 15,
                "column": 44,
                "nodeType": "BinaryExpression",
                "source": "        else if(message != null && message ==\"Program Not Completed\")"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 20,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Page Refresh123');       "
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 26,
                "column": 39,
                "nodeType": "BinaryExpression",
                "source": "        if(component.get(\"v.Message\") == \"Program is successfully completed\"){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 29,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"ist event value\" );"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 37,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('hideModalBox');       "
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 41,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('&&&&&&&Hide=='+component.get(\"v.ComponentName\"));"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 43,
                "column": 21,
                "nodeType": "BinaryExpression",
                "source": "        if(compName == 'Frontier_Pgm_Plang_Review'){ "
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 44,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log('Event Fired above========');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 47,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log('Event Fired below========');"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 51,
                "column": 44,
                "nodeType": "BinaryExpression",
                "source": "        else if(component.get(\"v.Message\") == \"Program is successfully completed\"){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 54,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"ist event value\" );"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_PopUp\\Frontier_PopUpHelper.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_ProgramPlanning_Accountlist\\Frontier_ProgramPlanning_AccountlistController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 5,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('account'+account);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 6,
                "column": 10,
                "nodeType": "MemberExpression",
                "source": "         console.log('accountList'+accountList);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 8,
                "column": 51,
                "nodeType": "BinaryExpression",
                "source": "        var radlKey = (component.get(\"v.radlKey\") == undefined ? 'None': component.get(\"v.radlKey\")) ;"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 9,
                "column": 55,
                "nodeType": "BinaryExpression",
                "source": "        var searchKey = (component.get(\"v.searchKey\") == undefined || component.get(\"v.searchKey\") == null ? '' : component.get(\"v.searchKey\"));"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 12,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                if(account != undefined && account.Id == accountList[i].Id "
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 12,
                "column": 55,
                "nodeType": "BinaryExpression",
                "source": "                if(account != undefined && account.Id == accountList[i].Id "
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 13,
                "column": 33,
                "nodeType": "BinaryExpression",
                "source": "                   && ((radlKey != undefined && (radlKey != 'None' || radlKey != null) && radlKey == account.serviceLevelDesc)?true:((radlKey == undefined || radlKey == 'None' || radlKey == null) && searchKey != '' ? true :(searchKey == '' && radlKey == 'None'?true:false)))"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 13,
                "column": 58,
                "nodeType": "BinaryExpression",
                "source": "                   && ((radlKey != undefined && (radlKey != 'None' || radlKey != null) && radlKey == account.serviceLevelDesc)?true:((radlKey == undefined || radlKey == 'None' || radlKey == null) && searchKey != '' ? true :(searchKey == '' && radlKey == 'None'?true:false)))"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 13,
                "column": 99,
                "nodeType": "BinaryExpression",
                "source": "                   && ((radlKey != undefined && (radlKey != 'None' || radlKey != null) && radlKey == account.serviceLevelDesc)?true:((radlKey == undefined || radlKey == 'None' || radlKey == null) && searchKey != '' ? true :(searchKey == '' && radlKey == 'None'?true:false)))"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 13,
                "column": 143,
                "nodeType": "BinaryExpression",
                "source": "                   && ((radlKey != undefined && (radlKey != 'None' || radlKey != null) && radlKey == account.serviceLevelDesc)?true:((radlKey == undefined || radlKey == 'None' || radlKey == null) && searchKey != '' ? true :(searchKey == '' && radlKey == 'None'?true:false)))"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 13,
                "column": 167,
                "nodeType": "BinaryExpression",
                "source": "                   && ((radlKey != undefined && (radlKey != 'None' || radlKey != null) && radlKey == account.serviceLevelDesc)?true:((radlKey == undefined || radlKey == 'None' || radlKey == null) && searchKey != '' ? true :(searchKey == '' && radlKey == 'None'?true:false)))"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 13,
                "column": 210,
                "nodeType": "BinaryExpression",
                "source": "                   && ((radlKey != undefined && (radlKey != 'None' || radlKey != null) && radlKey == account.serviceLevelDesc)?true:((radlKey == undefined || radlKey == 'None' || radlKey == null) && searchKey != '' ? true :(searchKey == '' && radlKey == 'None'?true:false)))"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 13,
                "column": 235,
                "nodeType": "BinaryExpression",
                "source": "                   && ((radlKey != undefined && (radlKey != 'None' || radlKey != null) && radlKey == account.serviceLevelDesc)?true:((radlKey == undefined || radlKey == 'None' || radlKey == null) && searchKey != '' ? true :(searchKey == '' && radlKey == 'None'?true:false)))"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 13,
                "column": 252,
                "nodeType": "BinaryExpression",
                "source": "                   && ((radlKey != undefined && (radlKey != 'None' || radlKey != null) && radlKey == account.serviceLevelDesc)?true:((radlKey == undefined || radlKey == 'None' || radlKey == null) && searchKey != '' ? true :(searchKey == '' && radlKey == 'None'?true:false)))"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 53,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Select All');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 58,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('**********accountToSelect'+accountToSelect);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 60,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('**********isAllSelected'+isAllSelected+'filteredAccountList'+JSON.stringify(filteredAccountList));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 63,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('**********filteredAccountList[i].Id == account.Id'+filteredAccountList[i].Id == account.Id);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 63,
                "column": 107,
                "nodeType": "BinaryExpression",
                "source": "                console.log('**********filteredAccountList[i].Id == account.Id'+filteredAccountList[i].Id == account.Id);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 65,
                "column": 69,
                "nodeType": "BinaryExpression",
                "source": "                if(!account.isSelected && filteredAccountList[i].Id == account.Id){"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'i' is already defined",
                "line": 73,
                "column": 21,
                "nodeType": "Identifier",
                "source": "            for(var i = 0; i < filteredAccountList.length; i++){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 74,
                "column": 68,
                "nodeType": "BinaryExpression",
                "source": "                if(account.isSelected && filteredAccountList[i].Id == account.Id){"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_ProgramPlanning_Accountlist\\Frontier_ProgramPlanning_AccountlistHelper.js",
        "result": [
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'accountToSelect' is already defined",
                "line": 9,
                "column": 9,
                "nodeType": "Identifier",
                "source": "    var accountToSelect = JSON.stringify(account);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 18,
                "column": 6,
                "nodeType": "MemberExpression",
                "source": "     console.log(accountToSelect);"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_ProgramPlanning_Accountlist\\Frontier_ProgramPlanning_AccountlistRenderer.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_ProgramPlanning_Chart\\Frontier_ProgramPlanning_ChartController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_ProgramPlanning_Chart\\Frontier_ProgramPlanning_ChartHelper.js",
        "result": [
            {
                "ruleId": null,
                "fatal": true,
                "severity": 2,
                "source": "                    Chart.helpers.each(self.data.datasets.forEach((dataset, datasetIndex) => {",
                "message": "Parsing error: Parenthesized pattern",
                "line": 50,
                "column": 67
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_ProgramPlanning_Chart\\Frontier_ProgramPlanning_ChartRenderer.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_ProgramPlanning_Programlist\\Frontier_ProgramPlanning_ProgramlistController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 3,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Inside Do Init');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 9,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('cmpName' + cmpName);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 10,
                "column": 20,
                "nodeType": "BinaryExpression",
                "source": "        if(cmpName == 'ProgramsList'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 21,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('evt'+evt);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 27,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"progId\" + evt);"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_ProgramPlanning_Programlist\\Frontier_ProgramPlanning_ProgramlistHelper.js",
        "result": [
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'page' is already defined",
                "line": 3,
                "column": 6,
                "nodeType": "Identifier",
                "source": "\tvar page=page||1;"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 7,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('acctDetails' +acctDetails);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 12,
                "column": 12,
                "nodeType": "MemberExpression",
                "source": "           console.log('dealerId' +dealerId + isMyProgram);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 15,
                "column": 22,
                "nodeType": "BinaryExpression",
                "source": "         if(dealerId == 'undefined' || dealerId =='' || dealerId == null){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 15,
                "column": 49,
                "nodeType": "BinaryExpression",
                "source": "         if(dealerId == 'undefined' || dealerId =='' || dealerId == null){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 34,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log(\"retResponse\"+ retResponse);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 48,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Error');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_ProgramPlanning_Radl\\Frontier_ProgramPlanning_RadlController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_ProgramPlanning_Radl\\Frontier_ProgramPlanning_RadlHelper.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_ProgramPlanning_Radl\\Frontier_ProgramPlanning_RadlRenderer.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_ProgramPlanning_SelectedProduct\\Frontier_ProgramPlanning_SelectedProductController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 5,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"Selected\" +selectProduct);        "
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_ProgramPlanning\\Frontier_ProgramPlanningController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 14,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('cmpName' + cmpName);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 15,
                "column": 20,
                "nodeType": "BinaryExpression",
                "source": "        if(cmpName == 'ProgramplanAccountList'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 21,
                "column": 26,
                "nodeType": "BinaryExpression",
                "source": "            if(searchKey == undefined){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 24,
                "column": 25,
                "nodeType": "BinaryExpression",
                "source": "             if(radlKey == undefined )"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 35,
                "column": 55,
                "nodeType": "BinaryExpression",
                "source": "            if(component.get(\"v.accountSelectedList\") != '' && (radlKey == 'None' ||searchKey == '')){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 35,
                "column": 73,
                "nodeType": "BinaryExpression",
                "source": "            if(component.get(\"v.accountSelectedList\") != '' && (radlKey == 'None' ||searchKey == '')){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 35,
                "column": 95,
                "nodeType": "BinaryExpression",
                "source": "            if(component.get(\"v.accountSelectedList\") != '' && (radlKey == 'None' ||searchKey == '')){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 53,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('cmpName' + cmpName);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 54,
                "column": 20,
                "nodeType": "BinaryExpression",
                "source": "        if(cmpName == 'ProgramAccount'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 68,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"Selected\" +selectCmp);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 78,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('searchKey----' +searchKey+'radlKey----'+radlKey+'component.get(\"v.searchString\")'+component.get(\"v.searchString\"));"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 79,
                "column": 22,
                "nodeType": "BinaryExpression",
                "source": "        if(searchKey != undefined){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 81,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log('searchKey Available' +searchKey);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 83,
                "column": 92,
                "nodeType": "BinaryExpression",
                "source": "        else if(component.get(\"v.searchString\") != null || component.get(\"v.searchString\") != undefined || component.get(\"v.searchString\") != ''){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 83,
                "column": 140,
                "nodeType": "BinaryExpression",
                "source": "        else if(component.get(\"v.searchString\") != null || component.get(\"v.searchString\") != undefined || component.get(\"v.searchString\") != ''){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 85,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log('searchKey Retained' +searchKey)"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 87,
                "column": 31,
                "nodeType": "BinaryExpression",
                "source": "            else if(searchKey == undefined || component.get(\"v.searchString\") == null || searchKey == '' ||"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 87,
                "column": 100,
                "nodeType": "BinaryExpression",
                "source": "            else if(searchKey == undefined || component.get(\"v.searchString\") == null || searchKey == '' ||"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 88,
                "column": 72,
                "nodeType": "BinaryExpression",
                "source": "                  searchKey == null || component.get(\"v.searchString\") == '' || component.get(\"v.searchString\") == undefined){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 88,
                "column": 113,
                "nodeType": "BinaryExpression",
                "source": "                  searchKey == null || component.get(\"v.searchString\") == '' || component.get(\"v.searchString\") == undefined){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 89,
                "column": 50,
                "nodeType": "BinaryExpression",
                "source": "                if(component.get(\"v.searchText\") == undefined || component.get(\"v.searchText\") == null"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 90,
                "column": 52,
                "nodeType": "BinaryExpression",
                "source": "                  || component.get(\"v.searchText\") == ''){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 94,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('No searchKey' +searchKey)"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 104,
                "column": 20,
                "nodeType": "BinaryExpression",
                "source": "        if(radlKey != undefined || radlKey != null){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 109,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log('Radl Key Retain----++' +searchKey)"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 111,
                "column": 29,
                "nodeType": "BinaryExpression",
                "source": "            else if(radlKey == undefined || radlKey == '' || component.get(\"v.radlKey\") == null || radlKey == null){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 111,
                "column": 53,
                "nodeType": "BinaryExpression",
                "source": "            else if(radlKey == undefined || radlKey == '' || component.get(\"v.radlKey\") == null || radlKey == null){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 113,
                "column": 52,
                "nodeType": "BinaryExpression",
                "source": "                 if(component.find(\"searchByRADL\") == undefined){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 118,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('searchKey'+searchKey+'radlKey'+radlKey);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 120,
                "column": 52,
                "nodeType": "BinaryExpression",
                "source": "        if((component.get(\"v.accountSelectedList\") != '') && ((radlKey == 'None' && searchKey != '')  "
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 120,
                "column": 72,
                "nodeType": "BinaryExpression",
                "source": "        if((component.get(\"v.accountSelectedList\") != '') && ((radlKey == 'None' && searchKey != '')  "
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 120,
                "column": 95,
                "nodeType": "BinaryExpression",
                "source": "        if((component.get(\"v.accountSelectedList\") != '') && ((radlKey == 'None' && searchKey != '')  "
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 121,
                "column": 19,
                "nodeType": "BinaryExpression",
                "source": "      || (radlKey != 'None' && searchKey == '') || (radlKey != 'None' && searchKey != '') "
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 121,
                "column": 42,
                "nodeType": "BinaryExpression",
                "source": "      || (radlKey != 'None' && searchKey == '') || (radlKey != 'None' && searchKey != '') "
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 121,
                "column": 61,
                "nodeType": "BinaryExpression",
                "source": "      || (radlKey != 'None' && searchKey == '') || (radlKey != 'None' && searchKey != '') "
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 121,
                "column": 84,
                "nodeType": "BinaryExpression",
                "source": "      || (radlKey != 'None' && searchKey == '') || (radlKey != 'None' && searchKey != '') "
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 122,
                "column": 34,
                "nodeType": "BinaryExpression",
                "source": "                     || (radlKey == 'None' && searchKey == ''))){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 122,
                "column": 57,
                "nodeType": "BinaryExpression",
                "source": "                     || (radlKey == 'None' && searchKey == ''))){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 123,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log('Inside selected' + radlKey+searchKey);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 126,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('searchKey--------------'+searchKey+'component.get(\"v.searchString\")'+component.get(\"v.searchString\"));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 196,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('progId'+progId);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 219,
                "column": 40,
                "nodeType": "BinaryExpression",
                "source": "        if(component.get(\"v.prevRadl\") != ''){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 249,
                "column": 41,
                "nodeType": "BinaryExpression",
                "source": "         if((component.get(\"v.dealerId\")) == ''){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 266,
                "column": 37,
                "nodeType": "BinaryExpression",
                "source": "        if (prodcode.get(\"v.value\") == 'None') {"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 270,
                "column": 44,
                "nodeType": "BinaryExpression",
                "source": "        else if (chargeType.get(\"v.value\") == 'None') {"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 290,
                "column": 41,
                "nodeType": "BinaryExpression",
                "source": "         if(component.get(\"v.dealerId\") == ''){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 300,
                "column": 67,
                "nodeType": "BinaryExpression",
                "source": "        var productPrice = component.find(\"Price\").get(\"v.value\") != 'None' ? component.find(\"Price\").get(\"v.value\") : null;"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 301,
                "column": 72,
                "nodeType": "BinaryExpression",
                "source": "        var productCode = component.find(\"productCode\").get(\"v.value\") != 'None' ? component.find(\"productCode\").get(\"v.value\") : null;"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 303,
                "column": 168,
                "nodeType": "BinaryExpression",
                "source": "        productWrap = '{\"Qty\":'+(component.get(\"v.productQty\") != null ? component.get(\"v.productQty\") : null)+',\"ProductCode\":\"'+((productCode != null && productCode != 'None') ? productCode.split(':')[0]:null)+'\",\"productId\":\"'+((productCode != null && productCode != 'None') ? productCode.split(':')[1]:null)+'\",\"price\":'+((productPrice != null && productPrice != 'None') ? productPrice.split(':')[0]:null)+',\"chargeType\":\"'+(component.find(\"ChargeType\").get(\"v.value\") != 'None' ? component.find(\"ChargeType\").get(\"v.value\") : null)+'\",\"accountId\":null}';"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 303,
                "column": 268,
                "nodeType": "BinaryExpression",
                "source": "        productWrap = '{\"Qty\":'+(component.get(\"v.productQty\") != null ? component.get(\"v.productQty\") : null)+',\"ProductCode\":\"'+((productCode != null && productCode != 'None') ? productCode.split(':')[0]:null)+'\",\"productId\":\"'+((productCode != null && productCode != 'None') ? productCode.split(':')[1]:null)+'\",\"price\":'+((productPrice != null && productPrice != 'None') ? productPrice.split(':')[0]:null)+',\"chargeType\":\"'+(component.find(\"ChargeType\").get(\"v.value\") != 'None' ? component.find(\"ChargeType\").get(\"v.value\") : null)+'\",\"accountId\":null}';"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 303,
                "column": 365,
                "nodeType": "BinaryExpression",
                "source": "        productWrap = '{\"Qty\":'+(component.get(\"v.productQty\") != null ? component.get(\"v.productQty\") : null)+',\"ProductCode\":\"'+((productCode != null && productCode != 'None') ? productCode.split(':')[0]:null)+'\",\"productId\":\"'+((productCode != null && productCode != 'None') ? productCode.split(':')[1]:null)+'\",\"price\":'+((productPrice != null && productPrice != 'None') ? productPrice.split(':')[0]:null)+',\"chargeType\":\"'+(component.find(\"ChargeType\").get(\"v.value\") != 'None' ? component.find(\"ChargeType\").get(\"v.value\") : null)+'\",\"accountId\":null}';"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 303,
                "column": 474,
                "nodeType": "BinaryExpression",
                "source": "        productWrap = '{\"Qty\":'+(component.get(\"v.productQty\") != null ? component.get(\"v.productQty\") : null)+',\"ProductCode\":\"'+((productCode != null && productCode != 'None') ? productCode.split(':')[0]:null)+'\",\"productId\":\"'+((productCode != null && productCode != 'None') ? productCode.split(':')[1]:null)+'\",\"price\":'+((productPrice != null && productPrice != 'None') ? productPrice.split(':')[0]:null)+',\"chargeType\":\"'+(component.find(\"ChargeType\").get(\"v.value\") != 'None' ? component.find(\"ChargeType\").get(\"v.value\") : null)+'\",\"accountId\":null}';"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 305,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Product Wrapppppppppppppp'+productWrap);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 323,
                "column": 41,
                "nodeType": "BinaryExpression",
                "source": "         if(component.get(\"v.dealerId\") == ''){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 335,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('event.target.id' +event.target.id);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 336,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "        if(event.target.id != undefined){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 358,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log(component.get(\"v.tempAccountSelectedList\")+component.get(\"v.tempAccountList\"));"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 359,
                "column": 59,
                "nodeType": "BinaryExpression",
                "source": "            if(component.get(\"v.tempAccountSelectedList\") == '' || component.get(\"v.tempAccountSelectedList\") == null){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 365,
                "column": 51,
                "nodeType": "BinaryExpression",
                "source": "            if(component.get(\"v.tempAccountList\") == '' || component.get(\"v.tempAccountList\") == null){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 371,
                "column": 67,
                "nodeType": "BinaryExpression",
                "source": "           if((accountSelectedList != null || accountSelectedList != undefined || accountSelectedList != '') && accountSelectedList.length > 0)"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 371,
                "column": 103,
                "nodeType": "BinaryExpression",
                "source": "           if((accountSelectedList != null || accountSelectedList != undefined || accountSelectedList != '') && accountSelectedList.length > 0)"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 384,
                "column": 76,
                "nodeType": "BinaryExpression",
                "source": "                    if((accountSelectedList != null || accountSelectedList != undefined || accountSelectedList != '') && accountSelectedList.length > 0){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 384,
                "column": 112,
                "nodeType": "BinaryExpression",
                "source": "                    if((accountSelectedList != null || accountSelectedList != undefined || accountSelectedList != '') && accountSelectedList.length > 0){"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'j' is already defined",
                "line": 385,
                "column": 33,
                "nodeType": "Identifier",
                "source": "                        for(var j = 0;j<accountSelectedList.length;j++){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 386,
                "column": 43,
                "nodeType": "BinaryExpression",
                "source": "  \t\t\t\t\t\t\tif (filteredAccountList[i].accId == accountSelectedList[j].accId) {"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 401,
                "column": 54,
                "nodeType": "BinaryExpression",
                "source": "            if((selectedList != null || selectedList != undefined || selectList != '') && selectedList.length > 0){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 401,
                "column": 81,
                "nodeType": "BinaryExpression",
                "source": "            if((selectedList != null || selectedList != undefined || selectList != '') && selectedList.length > 0){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 408,
                "column": 36,
                "nodeType": "BinaryExpression",
                "source": "            if(accountSelectedList == undefined || accountSelectedList == null || accountSelectedList == ''){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 408,
                "column": 103,
                "nodeType": "BinaryExpression",
                "source": "            if(accountSelectedList == undefined || accountSelectedList == null || accountSelectedList == ''){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 412,
                "column": 50,
                "nodeType": "BinaryExpression",
                "source": "        else if(component.get(\"v.isAllSelected\") == false){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 419,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log(\"accountIteration\" + component.get(\"v.accounts\"));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 428,
                "column": 10,
                "nodeType": "MemberExpression",
                "source": "         console.log('selectedProducts'+selectedProducts.length);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 433,
                "column": 10,
                "nodeType": "MemberExpression",
                "source": "         console.log(\"Event Handled\");"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_ProgramPlanning\\Frontier_ProgramPlanningHelper.js",
        "result": [
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 8,
                "column": 44,
                "nodeType": "BinaryExpression",
                "source": "        if(component.get(\"v.searchString\") != undefined){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 12,
                "column": 43,
                "nodeType": "BinaryExpression",
                "source": "        if(component.find(\"searchByRADL\") != undefined){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 21,
                "column": 60,
                "nodeType": "BinaryExpression",
                "source": "        else if(isInitialize && (component.get(\"v.progId\") == '')){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 22,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log('Redirect from review page');"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 35,
                "column": 95,
                "nodeType": "BinaryExpression",
                "source": "            \"dealerId\" : ((component.get(\"v.dealerId\") == null || component.get(\"v.dealerId\") == '' || component.get(\"v.dealerId\") == undefined) ? 'Null' : component.get(\"v.dealerId\"))"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 35,
                "column": 132,
                "nodeType": "BinaryExpression",
                "source": "            \"dealerId\" : ((component.get(\"v.dealerId\") == null || component.get(\"v.dealerId\") == '' || component.get(\"v.dealerId\") == undefined) ? 'Null' : component.get(\"v.dealerId\"))"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 43,
                "column": 23,
                "nodeType": "BinaryExpression",
                "source": "             if(state == 'SUCCESS'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 52,
                "column": 18,
                "nodeType": "MemberExpression",
                "source": "                 console.log('IIIIIIIIIIII'+JSON.stringify(programList[1]));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 57,
                "column": 35,
                "nodeType": "MemberExpression",
                "source": "                                  console.log('<<<<<<<<<<<<<<<<<<<<<'+component.get(\"v.progId\"));"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 58,
                "column": 36,
                "nodeType": "BinaryExpression",
                "source": "                 if(programList[2] != ''){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 59,
                "column": 22,
                "nodeType": "MemberExpression",
                "source": "                     console.log('EEEEEEEEE'+JSON.stringify(JSON.parse(programList[2])));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 90,
                "column": 18,
                "nodeType": "MemberExpression",
                "source": "                 console.log(response.getState());"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 96,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Searchkey----------'+searchKey+'radlKey--------'+radlKey+'isSelected---'+isSelected);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 114,
                "column": 36,
                "nodeType": "BinaryExpression",
                "source": "            searchKey : (searchKey == undefined || searchKey == null ? '' : searchKey), "
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 119,
                "column": 93,
                "nodeType": "BinaryExpression",
                "source": "            dealerId : ((component.get(\"v.dealerId\") == null || component.get(\"v.dealerId\") == '' || component.get(\"v.dealerId\") == undefined) ? 'Null' : component.get(\"v.dealerId\"))"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 119,
                "column": 130,
                "nodeType": "BinaryExpression",
                "source": "            dealerId : ((component.get(\"v.dealerId\") == null || component.get(\"v.dealerId\") == '' || component.get(\"v.dealerId\") == undefined) ? 'Null' : component.get(\"v.dealerId\"))"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 138,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('isSelected'+isSelected);"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'i' is already defined",
                "line": 163,
                "column": 30,
                "nodeType": "Identifier",
                "source": "                    for (var i=0; i<removeDeletedAccounts.length; i++) {"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 177,
                "column": 37,
                "nodeType": "BinaryExpression",
                "source": "            if(selectedAccountCount == 0){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 180,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log('accountList.length'+accountList.length);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 183,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log(accountProduct +'Stringifyyyyyy'+JSON.stringify(accountProduct))"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 184,
                "column": 31,
                "nodeType": "BinaryExpression",
                "source": "            if(accountProduct != '' && accountProduct.length > 0){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 198,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log('Inside getAllAccountsHelper');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 216,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('isChecked'+isChecked);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 221,
                "column": 33,
                "nodeType": "BinaryExpression",
                "source": "                   if(accountId == accounts[i].accId){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 230,
                "column": 46,
                "nodeType": "BinaryExpression",
                "source": "                   if(isChecked && accountId == accountIdsToDelete[k]){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 238,
                "column": 51,
                "nodeType": "BinaryExpression",
                "source": "                       if(!isChecked && accountId != deletedAccountList[j].accId){"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'i' is already defined",
                "line": 249,
                "column": 20,
                "nodeType": "Identifier",
                "source": "           for(var i =0;i<accountList.length;i++){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 251,
                "column": 29,
                "nodeType": "BinaryExpression",
                "source": "               if(accountId == accountList[i].accId && temporaryAccountId != accountId && isChecked){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 251,
                "column": 75,
                "nodeType": "BinaryExpression",
                "source": "               if(accountId == accountList[i].accId && temporaryAccountId != accountId && isChecked){"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'i' is already defined",
                "line": 261,
                "column": 19,
                "nodeType": "Identifier",
                "source": "          for(var i =0;i<accounts.length;i++){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 262,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "              if(accountId == accounts[i].accId  && !isChecked){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 270,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log('accountsToDelete'+accountsToDelete);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 277,
                "column": 40,
                "nodeType": "BinaryExpression",
                "source": "        if(currentSelectedAccountCount == 0 || currentSelectedAccountCount > prevSelectedAccountCount){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 291,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Error'+response.getError());"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 299,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Accounts to insert======'+accounts);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 303,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('selectedProducts'+selectedProducts);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 307,
                "column": 46,
                "nodeType": "BinaryExpression",
                "source": "        var remainingCount = (program.Budget != 'NA' && (parseInt(program.Budget) >= program.Allocated) ? parseInt(program.Budget) - program.Allocated : 0);"
            },
            {
                "ruleId": "radix",
                "severity": 2,
                "message": "Missing radix parameter.",
                "line": 307,
                "column": 58,
                "nodeType": "CallExpression",
                "source": "        var remainingCount = (program.Budget != 'NA' && (parseInt(program.Budget) >= program.Allocated) ? parseInt(program.Budget) - program.Allocated : 0);"
            },
            {
                "ruleId": "radix",
                "severity": 2,
                "message": "Missing radix parameter.",
                "line": 307,
                "column": 107,
                "nodeType": "CallExpression",
                "source": "        var remainingCount = (program.Budget != 'NA' && (parseInt(program.Budget) >= program.Allocated) ? parseInt(program.Budget) - program.Allocated : 0);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 308,
                "column": 3,
                "nodeType": "MemberExpression",
                "source": "\t\tconsole.log('remainingCount'+remainingCount+'selectedAccounts.length'+selectedAccounts.length);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 309,
                "column": 94,
                "nodeType": "BinaryExpression",
                "source": "        if(selectedAccounts.length <= (remainingCount + program.Allocated) || program.Budget == 'NA')  {"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 328,
                "column": 22,
                "nodeType": "MemberExpression",
                "source": "                     console.log('Error Occured');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 340,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('program.Id' +program.Id+'accountId'+accountId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 362,
                "column": 22,
                "nodeType": "MemberExpression",
                "source": "                     console.log('JSON.stringify(programDetail)'+JSON.stringify(programDetail));  "
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 402,
                "column": 36,
                "nodeType": "BinaryExpression",
                "source": "                           if(comp != undefined){"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'programDetail' is already defined",
                "line": 408,
                "column": 13,
                "nodeType": "Identifier",
                "source": "        var programDetail = JSON.parse(programDetail);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 409,
                "column": 6,
                "nodeType": "MemberExpression",
                "source": "     console.log('Inside RADL'+JSON.stringify(programDetail));"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 421,
                "column": 24,
                "nodeType": "BinaryExpression",
                "source": "                if(cmp != undefined){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 443,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('productToSelect'+productToSelect+'accountId'+accountId);"
            },
            {
                "ruleId": "no-array-constructor",
                "severity": 2,
                "message": "The array literal notation [] is preferrable.",
                "line": 445,
                "column": 29,
                "nodeType": "NewExpression",
                "source": "        var productsToadd = new Array();"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 447,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('accountProduct'+JSON.stringify(accountProduct));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 451,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('selectedProducts'+JSON.stringify(selectedProducts)+'JSON.stringify'+selectedProducts);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 452,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('associatedProduct'+JSON.stringify(associatedProducts));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 456,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log('associatedProducts not null');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 458,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Inside for loopppppppppp'+accountProduct.productId+'associatedProducts[i].productId'+associatedProducts[i].productId);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 459,
                "column": 45,
                "nodeType": "BinaryExpression",
                "source": "                if(accountProduct.accountId == associatedProducts[i].accountId "
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 460,
                "column": 48,
                "nodeType": "BinaryExpression",
                "source": "                   && accountProduct.productId == associatedProducts[i].productId){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 462,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('isDuplicateAssociated'+isDuplicateAssociated);"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'i' is already defined",
                "line": 472,
                "column": 21,
                "nodeType": "Identifier",
                "source": "            for(var i = 0;i<selectedProducts.length;i++){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 473,
                "column": 45,
                "nodeType": "BinaryExpression",
                "source": "                if(accountProduct.accountId == selectedProducts[i].accountId "
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 474,
                "column": 52,
                "nodeType": "BinaryExpression",
                "source": "                       && accountProduct.productId == selectedProducts[i].productId){                    "
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 476,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('isDuplicateSelected Same Product'+isDuplicateSelected);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 478,
                "column": 50,
                "nodeType": "BinaryExpression",
                "source": "                else if(accountProduct.accountId == selectedProducts[i].accountId  "
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 479,
                "column": 53,
                "nodeType": "BinaryExpression",
                "source": "                        && accountProduct.productId != selectedProducts[i].productId){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 482,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('isDuplicateSelected diff Product'+isDuplicateSelected);"
            },
            {
                "ruleId": "no-array-constructor",
                "severity": 2,
                "message": "The array literal notation [] is preferrable.",
                "line": 495,
                "column": 37,
                "nodeType": "NewExpression",
                "source": "        var selectedProductsToAdd = new Array();"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'i' is already defined",
                "line": 500,
                "column": 25,
                "nodeType": "Identifier",
                "source": "                for(var i = 0;i<selectedProducts.length;i++){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 506,
                "column": 1,
                "nodeType": "MemberExpression",
                "source": "console.log('JSON Stringify selected Product'+JSON.stringify(selectedProductsToAdd));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 512,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Event Handled');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_ProgramPlanning\\Frontier_ProgramPlanningRenderer.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_Programs_Activities\\Frontier_Programs_ActivitiesController.js",
        "result": [
            {
                "ruleId": null,
                "fatal": true,
                "severity": 2,
                "source": "}",
                "message": "Parsing error: Unexpected token",
                "line": 50,
                "column": 2
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_Programs_Activities\\Frontier_Programs_ActivitiesHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 24,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log(\"json stringfiy:::\" + JSON.stringify(retResponse));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 38,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log(\"v.programEventList from PA\" + programEventlist);                              "
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 41,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Error');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 64,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log( accPgmId + ' ' + status);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 83,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Success');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 86,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Error');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_Programs_Activities\\Frontier_Programs_ActivitiesRenderer.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 4,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('----------');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_Programs_Carosel_Actitvities\\Frontier_Programs_Carosel_ActitvitiesController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 3,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"-------\");"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_Programs_Carosel_Actitvities\\Frontier_Programs_Carosel_ActitvitiesHelper.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_Programs_Carosel_Actitvities\\Frontier_Programs_Carosel_ActitvitiesRenderer.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 13,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"rerender check::\");"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_RadlCoveragechart\\Frontier_RadlCoveragechartController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_RadlCoveragechart\\Frontier_RadlCoveragechartHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 4,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('-----Acccount coverage chart-----' );"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 19,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Success');"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 26,
                "column": 47,
                "nodeType": "BinaryExpression",
                "source": "                if(component.get(\"v.accType\") == 'Partner'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 28,
                "column": 25,
                "nodeType": "MemberExpression",
                "source": "                        console.log('Inside Develop');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 32,
                "column": 25,
                "nodeType": "MemberExpression",
                "source": "                        console.log('Inside Retain');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 36,
                "column": 25,
                "nodeType": "MemberExpression",
                "source": "                        console.log('Inside Retain');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 40,
                "column": 25,
                "nodeType": "MemberExpression",
                "source": "                        console.log('Inside Retain');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 44,
                "column": 25,
                "nodeType": "MemberExpression",
                "source": "                        console.log('key' + key );"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 45,
                "column": 32,
                "nodeType": "BinaryExpression",
                "source": "                        if(key == 'Develop'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 47,
                "column": 29,
                "nodeType": "MemberExpression",
                "source": "                            console.log('Develop4'+ developAccCount);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 49,
                "column": 32,
                "nodeType": "BinaryExpression",
                "source": "                        if(key == 'Acquire'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 52,
                "column": 32,
                "nodeType": "BinaryExpression",
                "source": "                        if(key == 'Retain'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 55,
                "column": 32,
                "nodeType": "BinaryExpression",
                "source": "                        if(key == 'Light Touch'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 61,
                "column": 52,
                "nodeType": "BinaryExpression",
                "source": "                else if(component.get(\"v.accType\") == 'Customer'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 63,
                "column": 25,
                "nodeType": "MemberExpression",
                "source": "                        console.log('Inside Develop');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 67,
                "column": 25,
                "nodeType": "MemberExpression",
                "source": "                        console.log('Inside Retain');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 71,
                "column": 25,
                "nodeType": "MemberExpression",
                "source": "                        console.log('Inside Retain');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 75,
                "column": 25,
                "nodeType": "MemberExpression",
                "source": "                        console.log('Inside Retain');"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'key' is already defined",
                "line": 78,
                "column": 29,
                "nodeType": "Identifier",
                "source": "                    for(var key in accCoverageRADL.accRadlgrowOppMap){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 79,
                "column": 25,
                "nodeType": "MemberExpression",
                "source": "                        console.log('key' + key );"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 80,
                "column": 32,
                "nodeType": "BinaryExpression",
                "source": "                        if(key == 'Develop'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 82,
                "column": 29,
                "nodeType": "MemberExpression",
                "source": "                            console.log('Develop4'+ developAccCount);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 84,
                "column": 32,
                "nodeType": "BinaryExpression",
                "source": "                        if(key == 'Acquire'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 87,
                "column": 32,
                "nodeType": "BinaryExpression",
                "source": "                        if(key == 'Retain'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 90,
                "column": 32,
                "nodeType": "BinaryExpression",
                "source": "                        if(key == 'Light Touch'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 95,
                "column": 52,
                "nodeType": "BinaryExpression",
                "source": "                else if(component.get(\"v.accType\") == 'All Accounts'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 96,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside All Account' + JSON.stringify(accCoverageRADL.allaccRadlOppMap));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 98,
                "column": 25,
                "nodeType": "MemberExpression",
                "source": "                        console.log('Inside Develop');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 102,
                "column": 25,
                "nodeType": "MemberExpression",
                "source": "                        console.log('Inside Retain');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 106,
                "column": 25,
                "nodeType": "MemberExpression",
                "source": "                        console.log('Inside Retain');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 110,
                "column": 25,
                "nodeType": "MemberExpression",
                "source": "                        console.log('Inside Retain');"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'key' is already defined",
                "line": 113,
                "column": 29,
                "nodeType": "Identifier",
                "source": "                    for(var key in accCoverageRADL.allaccRadlOppMap){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 114,
                "column": 25,
                "nodeType": "MemberExpression",
                "source": "                        console.log('key' + key );"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 115,
                "column": 32,
                "nodeType": "BinaryExpression",
                "source": "                        if(key == 'Develop'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 117,
                "column": 29,
                "nodeType": "MemberExpression",
                "source": "                            console.log('Develop4'+ developAccCount);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 119,
                "column": 32,
                "nodeType": "BinaryExpression",
                "source": "                        if(key == 'Acquire'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 122,
                "column": 32,
                "nodeType": "BinaryExpression",
                "source": "                        if(key == 'Retain'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 125,
                "column": 32,
                "nodeType": "BinaryExpression",
                "source": "                        if(key == 'Light Touch'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 133,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Errors', response.getError());"
            },
            {
                "ruleId": "no-shadow",
                "severity": 2,
                "message": "'data' is already declared in the upper scope.",
                "line": 192,
                "column": 48,
                "nodeType": "Identifier",
                "source": "                \t\tlabel: function(tooltipItem, data) {"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_Review_MasterComponent\\Frontier_Review_MasterComponentController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_ReviewProgram_Chart\\Frontier_ReviewProgram_ChartController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_ReviewProgram_Chart\\Frontier_ReviewProgram_ChartHelper.js",
        "result": [
            {
                "ruleId": null,
                "fatal": true,
                "severity": 2,
                "source": "\t\t\t\tChart.helpers.each(self.data.datasets.forEach((dataset, datasetIndex) => {",
                "message": "Parsing error: Parenthesized pattern",
                "line": 56,
                "column": 51
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_SalesOrderbyCrop\\Frontier_SalesOrderbyCropController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_SalesOrderbyCrop\\Frontier_SalesOrderbyCropHelper.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_Salesrep_Coverage_Area\\Frontier_Salesrep_Coverage_AreaController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 6,
                "column": 22,
                "nodeType": "MemberExpression",
                "source": "                     console.log(component.get(\"v.comLat\"));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 8,
                "column": 26,
                "nodeType": "MemberExpression",
                "source": "                         console.log(position.coords.latitude);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 9,
                "column": 26,
                "nodeType": "MemberExpression",
                "source": "                         console.log(position.coords.longitude);"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_Salesrep_Coverage_Area\\Frontier_Salesrep_Coverage_AreaHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 19,
                "column": 40,
                "nodeType": "MemberExpression",
                "source": "                                       console.log('Inside Dynamic creation');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 22,
                "column": 40,
                "nodeType": "MemberExpression",
                "source": "                                       console.log('Frontier_GoogleMapComponent');                                       "
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_SalesRep_KPI_Chart\\Frontier_SalesRep_KPI_ChartController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_SalesRep_KPI_Chart\\Frontier_SalesRep_KPI_ChartHelper.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_SalesRep_Performance\\Frontier_SalesRep_PerformanceController.js",
        "result": [
            {
                "ruleId": null,
                "fatal": true,
                "severity": 2,
                "source": "                    display: true,",
                "message": "Parsing error: Redefinition of property",
                "line": 58,
                "column": 21
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_SalesRep_Performance\\Frontier_SalesRep_PerformanceHelper.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_SalesRep_Performance\\Frontier_SalesRep_PerformanceRenderer.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_SalesRep_PerformanceApp\\Frontier_SalesRep_PerformanceAppController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_SalesRep_PerformanceApp\\Frontier_SalesRep_PerformanceAppHelper.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_SalesRep_ProgramDetail_Master\\Frontier_SalesRep_ProgramDetail_MasterController.js",
        "result": [
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 22,
                "column": 35,
                "nodeType": "BinaryExpression",
                "source": "        if(event.currentTarget.id != '' && component.get(\"v.prevId\") != '' && component.get(\"v.prevId\") != event.currentTarget.id){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 22,
                "column": 70,
                "nodeType": "BinaryExpression",
                "source": "        if(event.currentTarget.id != '' && component.get(\"v.prevId\") != '' && component.get(\"v.prevId\") != event.currentTarget.id){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 22,
                "column": 105,
                "nodeType": "BinaryExpression",
                "source": "        if(event.currentTarget.id != '' && component.get(\"v.prevId\") != '' && component.get(\"v.prevId\") != event.currentTarget.id){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 26,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"Event Target\"+event.currentTarget.id)"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 27,
                "column": 35,
                "nodeType": "BinaryExpression",
                "source": "        if(event.currentTarget.id != ''){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 41,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('cancel');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 51,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('cmpName' + cmpName);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 52,
                "column": 20,
                "nodeType": "BinaryExpression",
                "source": "        if(cmpName == 'MyPrograms'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 53,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Inside refresh Event');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_SalesRep_ProgramDetail_Master\\Frontier_SalesRep_ProgramDetail_MasterHelper.js",
        "result": [
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 7,
                "column": 21,
                "nodeType": "BinaryExpression",
                "source": "        if(groweAcc == 'undefined' || groweAcc=='' || groweAcc==null){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 7,
                "column": 47,
                "nodeType": "BinaryExpression",
                "source": "        if(groweAcc == 'undefined' || groweAcc=='' || groweAcc==null){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 10,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('groweAcc' + groweAcc);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 11,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Program Id' + programId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 15,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Inside Helper Target' + event.currentTarget.id);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 17,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Sort Field'+sortfield);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 21,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Triggered Field'+triggeredField);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 23,
                "column": 71,
                "nodeType": "BinaryExpression",
                "source": "            else if(isPageChange && component.get(\"v.triggeredField\") != \"\"){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 42,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log(\"retResponse\"+ retResponse);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 51,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Error');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 72,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Success');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 75,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Error');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 82,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"c:Frontier_GrowerAccount_UpdateTouchPoint\");"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 86,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('currentDateId' + currentDateId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 106,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('programId' +programId);"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'dealerId' is already defined",
                "line": 107,
                "column": 13,
                "nodeType": "Identifier",
                "source": "        var dealerId = component.get(\"v.growerAcc\");"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 108,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('dealerId' +dealerId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 113,
                "column": 12,
                "nodeType": "MemberExpression",
                "source": "           console.log('dealerId' +dealerId + isMyProgram);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 116,
                "column": 22,
                "nodeType": "BinaryExpression",
                "source": "         if(dealerId == 'undefined' || dealerId =='' || dealerId == null){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 116,
                "column": 49,
                "nodeType": "BinaryExpression",
                "source": "         if(dealerId == 'undefined' || dealerId =='' || dealerId == null){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 134,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log(\"retResponse\"+ JSON.stringify(retResponse));                    "
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'i' is already defined",
                "line": 147,
                "column": 25,
                "nodeType": "Identifier",
                "source": "                for(var i=0;i< retResponse.croptypes.length;i++){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 157,
                "column": 16,
                "nodeType": "MemberExpression",
                "source": "               console.log('Acquire' + Acquire + 'Develop' + Develop + 'LightTouch' +LightTouch +'Retain'+Retain);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 173,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Error');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 185,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Inside Grower Profile');        "
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 194,
                "column": 14,
                "nodeType": "MemberExpression",
                "source": "             console.log('growerAccountDetailJson' + seasonDetailsJson);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 195,
                "column": 5,
                "nodeType": "MemberExpression",
                "source": "\t\t\t console.log('growerAccountDetailJson.growerSeason' + seasonDetailsJson.growerSeason);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 197,
                "column": 14,
                "nodeType": "MemberExpression",
                "source": "             console.log('seasonDetailsJson.growerSeason' + seasonDetailsJson.growerSeason);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 202,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log(\"Errors\", response.getError());"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_SalesRep_ProgramDetails\\Frontier_SalesRep_ProgramDetailsController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 4,
                "column": 5,
                "nodeType": "MemberExpression",
                "source": "    console.log('Program Id' + progId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 14,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('cmpName' + cmpName);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 15,
                "column": 20,
                "nodeType": "BinaryExpression",
                "source": "        if(cmpName == 'SalesRepAccountList'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 26,
                "column": 35,
                "nodeType": "BinaryExpression",
                "source": "        if(event.currentTarget.id != '' && component.get(\"v.prevId\") != '' && component.get(\"v.prevId\") != event.currentTarget.id){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 26,
                "column": 70,
                "nodeType": "BinaryExpression",
                "source": "        if(event.currentTarget.id != '' && component.get(\"v.prevId\") != '' && component.get(\"v.prevId\") != event.currentTarget.id){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 26,
                "column": 105,
                "nodeType": "BinaryExpression",
                "source": "        if(event.currentTarget.id != '' && component.get(\"v.prevId\") != '' && component.get(\"v.prevId\") != event.currentTarget.id){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 30,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"Event Target\"+event.currentTarget.id)"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 31,
                "column": 35,
                "nodeType": "BinaryExpression",
                "source": "        if(event.currentTarget.id != ''){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 47,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(component.get(\"v.programId\"));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 60,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"reason\" + reason);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 66,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"ispageChange out\" + ispageChange);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 67,
                "column": 26,
                "nodeType": "BinaryExpression",
                "source": "        if (ispageChange == undefined){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 68,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log(\"ispageChange\" + ispageChange);"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_SalesRep_ProgramDetails\\Frontier_SalesRep_ProgramDetailsHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 8,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Program Id' + progId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 12,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Inside Helper Target' + event.currentTarget.id);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 14,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('&&&&&&&&&&&&&'+sortfield);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 18,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Triggered Field'+triggeredField);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 20,
                "column": 71,
                "nodeType": "BinaryExpression",
                "source": "            else if(isPageChange && component.get(\"v.triggeredField\") != \"\"){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 26,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('daccId' + daccId + ' ' + growerFlag);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 27,
                "column": 19,
                "nodeType": "BinaryExpression",
                "source": "        if(daccId == undefined || daccId ==''){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 27,
                "column": 42,
                "nodeType": "BinaryExpression",
                "source": "        if(daccId == undefined || daccId ==''){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 30,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Triggered Field'+triggeredField);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 50,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log(\"retResponse\"+ retResponse);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 58,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log(\"accProductList\" + JSON.stringify(retResponse[4]))"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 62,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Error');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 69,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('pgmAcc' + pgmAccId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 74,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log( accPgmId + ' ' + status);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 85,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Success');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 92,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Error');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 99,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Inside complete');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 101,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('pgmAcc' + pgmAccId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 106,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log( accPgmId + ' ' + status);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 116,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Success');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 119,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('popUpFlag' + popUpFlag);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 120,
                "column": 29,
                "nodeType": "BinaryExpression",
                "source": "                if(popUpFlag=='Allow'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 124,
                "column": 29,
                "nodeType": "BinaryExpression",
                "source": "                if(popUpFlag=='Not Allow'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 135,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Error');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 156,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Success');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 159,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Error');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 166,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('event.target.id' + event.target.id);"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'url' is already defined",
                "line": 183,
                "column": 21,
                "nodeType": "Identifier",
                "source": "                var url = '/one/one.app#/n/Grower_List?myprogramDetails='+myprogramDetails;"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'viewRecord' is already defined",
                "line": 184,
                "column": 21,
                "nodeType": "Identifier",
                "source": "                var viewRecord = document.getElementById(event.target.id);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 190,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('********account'+component.get(\"v.accountId\"));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 200,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log(\"retResponse\"+ JSON.stringify(retResponse));                    "
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 208,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Error');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 214,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"Inside showPop\" + message);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 220,
                "column": 32,
                "nodeType": "MemberExpression",
                "source": "                               console.log('pop');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 227,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"Inside showPop\" + message);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 233,
                "column": 32,
                "nodeType": "MemberExpression",
                "source": "                               console.log('pop');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 260,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log(\"progId\" + event.target.value);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 264,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Error');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_SalesRep_Programs\\Frontier_SalesRep_ProgramsController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 6,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"ispageChange out\" + ispageChange);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 7,
                "column": 26,
                "nodeType": "BinaryExpression",
                "source": "        if (ispageChange == undefined){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 8,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log(\"ispageChange\" + ispageChange);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 24,
                "column": 35,
                "nodeType": "BinaryExpression",
                "source": "        if(event.currentTarget.id != '' && component.get(\"v.prevId\") != '' && component.get(\"v.prevId\") != event.currentTarget.id){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 24,
                "column": 70,
                "nodeType": "BinaryExpression",
                "source": "        if(event.currentTarget.id != '' && component.get(\"v.prevId\") != '' && component.get(\"v.prevId\") != event.currentTarget.id){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 24,
                "column": 105,
                "nodeType": "BinaryExpression",
                "source": "        if(event.currentTarget.id != '' && component.get(\"v.prevId\") != '' && component.get(\"v.prevId\") != event.currentTarget.id){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 28,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"Event Target\"+event.target.id)"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 29,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"Current target\" + event.currentTarget.id);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 30,
                "column": 35,
                "nodeType": "BinaryExpression",
                "source": "        if(event.currentTarget.id != ''){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 46,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(component.get(\"v.programId\"));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 73,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"reason\" + reason);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 79,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"ispageChange out\" + ispageChange);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 80,
                "column": 26,
                "nodeType": "BinaryExpression",
                "source": "        if (ispageChange == undefined){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 81,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log(\"ispageChange\" + ispageChange);"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_SalesRep_Programs\\Frontier_SalesRep_ProgramsHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 3,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Inside list program');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 7,
                "column": 15,
                "nodeType": "MemberExpression",
                "source": "              console.log('event.target.id' + event.currentTarget.id);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 9,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log(\"v.SortByField.\"+event.currentTarget.id);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 12,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Triggered Field get'+ triggeredField);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 14,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Triggered Field'+\"v.SortByField.\"+event.currentTarget.id);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 16,
                "column": 71,
                "nodeType": "BinaryExpression",
                "source": "            else if(ispageChange && component.get(\"v.triggeredField\") != \"\"){"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'page' is already defined",
                "line": 21,
                "column": 13,
                "nodeType": "Identifier",
                "source": "        var page = page || 1;"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 25,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('dealerAccount' + dealerAccount);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 38,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Success');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 45,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('programlist' , programlist);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 49,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Error');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 55,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"c:Frontier_GrowerAccount_ProgramEventsList\");"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 59,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(programId+accountId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 76,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('pgmAcc' + pgmAccId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 81,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log( accPgmId + ' ' + status);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 91,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Success');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 94,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Error');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_SalesRepProfile\\Frontier_SalesRepProfileController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_SalesRepProgramAllocation\\Frontier_SalesRepProgramAllocationController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_SalesRepProgramAllocation\\Frontier_SalesRepProgramAllocationHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 5,
                "column": 8,
                "nodeType": "MemberExpression",
                "source": "       console.log('*********************************'+String((radlCoverage[chartIdentfier].totalCoverageMap['Develop']).indexOf(':')) == -1);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 5,
                "column": 136,
                "nodeType": "BinaryExpression",
                "source": "       console.log('*********************************'+String((radlCoverage[chartIdentfier].totalCoverageMap['Develop']).indexOf(':')) == -1);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 17,
                "column": 108,
                "nodeType": "BinaryExpression",
                "source": "                    data:[ String((radlCoverage[chartIdentfier].totalCoverageMap['Develop']).indexOf(':')) == -1?"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 29,
                "column": 121,
                "nodeType": "BinaryExpression",
                "source": "                    \t  String((radlCoverage[chartIdentfier].plannedProgramAllocatedAccountMap['Develop']).indexOf(':')) == -1?"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 33,
                "column": 119,
                "nodeType": "BinaryExpression",
                "source": "                         String((radlCoverage[chartIdentfier].plannedProgramAllocatedAvgMap['Develop']).indexOf(':')) == -1?"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 46,
                "column": 107,
                "nodeType": "BinaryExpression",
                "source": "                    data:[String((radlCoverage[chartIdentfier].totalCoverageMap['Acquire']).indexOf(':')) == -1?"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 58,
                "column": 119,
                "nodeType": "BinaryExpression",
                "source": "                     String((radlCoverage[chartIdentfier].plannedProgramAllocatedAccountMap['Acquire']).indexOf(':')) == -1?"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 62,
                "column": 115,
                "nodeType": "BinaryExpression",
                "source": "                     String((radlCoverage[chartIdentfier].plannedProgramAllocatedAvgMap['Acquire']).indexOf(':')) == -1?"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 74,
                "column": 104,
                "nodeType": "BinaryExpression",
                "source": "                        String((radlCoverage[chartIdentfier].totalCoverageMap['Retain']).indexOf(':')) == -1?"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 86,
                "column": 121,
                "nodeType": "BinaryExpression",
                "source": "                        String((radlCoverage[chartIdentfier].plannedProgramAllocatedAccountMap['Retain']).indexOf(':')) == -1?"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 91,
                "column": 113,
                "nodeType": "BinaryExpression",
                "source": "                    String((radlCoverage[chartIdentfier].plannedProgramAllocatedAvgMap['Retain']).indexOf(':')) == -1?"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 101,
                "column": 111,
                "nodeType": "BinaryExpression",
                "source": "                    data:[String((radlCoverage[chartIdentfier].totalCoverageMap['Light Touch']).indexOf(':')) == -1?"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 111,
                "column": 127,
                "nodeType": "BinaryExpression",
                "source": "                         String((radlCoverage[chartIdentfier].plannedProgramAllocatedAccountMap['Light Touch']).indexOf(':')) == -1?"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 115,
                "column": 123,
                "nodeType": "BinaryExpression",
                "source": "                         String((radlCoverage[chartIdentfier].plannedProgramAllocatedAvgMap['Light Touch']).indexOf(':')) == -1?"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 126,
                "column": 187,
                "nodeType": "BinaryExpression",
                "source": "                    data:[radlCoverage[chartIdentfier].totalCoverageMap.hasOwnProperty('No Program') && String((radlCoverage[chartIdentfier].totalCoverageMap['No Program']).indexOf(':') != -1 ) ? "
            },
            {
                "ruleId": "radix",
                "severity": 2,
                "message": "Missing radix parameter.",
                "line": 127,
                "column": 18,
                "nodeType": "CallExpression",
                "source": "            \t\t\t  parseInt(radlCoverage[chartIdentfier].totalCoverageMap['No Program'].split(':')[1]) : 0,0,0]"
            },
            {
                "ruleId": "no-shadow",
                "severity": 2,
                "message": "'data' is already declared in the upper scope.",
                "line": 212,
                "column": 34,
                "nodeType": "Identifier",
                "source": "    label: function(tooltipItem, data) {"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'dataVar' is already defined",
                "line": 217,
                "column": 13,
                "nodeType": "Identifier",
                "source": "        var dataVar = [];"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 218,
                "column": 43,
                "nodeType": "BinaryExpression",
                "source": "        if(data.labels[tooltipItem.index] == '# Accounts'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 219,
                "column": 117,
                "nodeType": "BinaryExpression",
                "source": "                          unit = String((radlCoverage[chartIdentfier].totalCoverageMap[dataset.label]).indexOf(':') != -1 ) ? "
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_SalesRepRadlCoverage\\Frontier_SalesRepRadlCoverageController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_SalesRepRadlCoverage\\Frontier_SalesRepRadlCoverageHelper.js",
        "result": [
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 15,
                "column": 110,
                "nodeType": "BinaryExpression",
                "source": "                    data:[String((radlCoverage[chartIdentfier].radlCoverageSalesMap['Develop']).indexOf(':') != -1 ) ? "
            },
            {
                "ruleId": "radix",
                "severity": 2,
                "message": "Missing radix parameter.",
                "line": 16,
                "column": 18,
                "nodeType": "CallExpression",
                "source": "            \t\t\t  parseInt(radlCoverage[chartIdentfier].radlCoverageSalesMap['Develop'].split(':')[1]) : 0] "
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 25,
                "column": 110,
                "nodeType": "BinaryExpression",
                "source": "                    data:[String((radlCoverage[chartIdentfier].radlCoverageSalesMap['Acquire']).indexOf(':') != -1 ) ? "
            },
            {
                "ruleId": "radix",
                "severity": 2,
                "message": "Missing radix parameter.",
                "line": 26,
                "column": 18,
                "nodeType": "CallExpression",
                "source": "            \t\t\t  parseInt(radlCoverage[chartIdentfier].radlCoverageSalesMap['Acquire'].split(':')[1]) : 0] "
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 34,
                "column": 109,
                "nodeType": "BinaryExpression",
                "source": "                    data:[String((radlCoverage[chartIdentfier].radlCoverageSalesMap['Retain']).indexOf(':') != -1 ) ? "
            },
            {
                "ruleId": "radix",
                "severity": 2,
                "message": "Missing radix parameter.",
                "line": 35,
                "column": 18,
                "nodeType": "CallExpression",
                "source": "            \t\t\t  parseInt(radlCoverage[chartIdentfier].radlCoverageSalesMap['Retain'].split(':')[1]) : 0]"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 43,
                "column": 114,
                "nodeType": "BinaryExpression",
                "source": "                    data:[String((radlCoverage[chartIdentfier].radlCoverageSalesMap['Light Touch']).indexOf(':') != -1 ) ? "
            },
            {
                "ruleId": "radix",
                "severity": 2,
                "message": "Missing radix parameter.",
                "line": 44,
                "column": 18,
                "nodeType": "CallExpression",
                "source": "            \t\t\t  parseInt(radlCoverage[chartIdentfier].radlCoverageSalesMap['Light Touch'].split(':')[1]) : 0]"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_SalesRepTerritoryBasedRadl\\Frontier_SalesRepTerritoryBasedRadlController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_SalesRepTerritoryBasedRadl\\Frontier_SalesRepTerritoryBasedRadlHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 5,
                "column": 8,
                "nodeType": "MemberExpression",
                "source": "       console.log('sasfsafd'+String((radlCoverage[chartIdentfier].totalCoverageMap['Develop']).indexOf(':') == -1)?"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 5,
                "column": 110,
                "nodeType": "BinaryExpression",
                "source": "       console.log('sasfsafd'+String((radlCoverage[chartIdentfier].totalCoverageMap['Develop']).indexOf(':') == -1)?"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 6,
                "column": 116,
                "nodeType": "BinaryExpression",
                "source": "                          1 : isNaN(String((radlCoverage[chartIdentfier].totalCoverageMap['Develop']).indexOf(':') == -1 ))? "
            },
            {
                "ruleId": "radix",
                "severity": 2,
                "message": "Missing radix parameter.",
                "line": 7,
                "column": 31,
                "nodeType": "CallExpression",
                "source": "                          2 : parseInt(radlCoverage[chartIdentfier].totalCoverageMap['Develop'].split(':')[1]));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 8,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(String((radlCoverage[chartIdentfier].totalCoverageMap['Develop']).indexOf(':')));"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 16,
                "column": 107,
                "nodeType": "BinaryExpression",
                "source": "                    data:[String((radlCoverage[chartIdentfier].totalCoverageMap['Develop']).indexOf(':')) == -1?"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 20,
                "column": 106,
                "nodeType": "BinaryExpression",
                "source": "                          String((radlCoverage[chartIdentfier].currentSalesMap['Develop']).indexOf(':')) == -1?"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 24,
                "column": 109,
                "nodeType": "BinaryExpression",
                "source": "                          String((radlCoverage[chartIdentfier].growthPotentialMap['Develop']).indexOf(':')) == -1?"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 35,
                "column": 105,
                "nodeType": "BinaryExpression",
                "source": "                        String((radlCoverage[chartIdentfier].totalCoverageMap['Acquire']).indexOf(':')) == -1?"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 39,
                "column": 104,
                "nodeType": "BinaryExpression",
                "source": "                        String((radlCoverage[chartIdentfier].currentSalesMap['Acquire']).indexOf(':')) == -1?"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 43,
                "column": 108,
                "nodeType": "BinaryExpression",
                "source": "                         String((radlCoverage[chartIdentfier].growthPotentialMap['Acquire']).indexOf(':')) == -1?"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 54,
                "column": 104,
                "nodeType": "BinaryExpression",
                "source": "                        String((radlCoverage[chartIdentfier].totalCoverageMap['Retain']).indexOf(':')) == -1?"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 58,
                "column": 103,
                "nodeType": "BinaryExpression",
                "source": "                        String((radlCoverage[chartIdentfier].currentSalesMap['Retain']).indexOf(':')) == -1?"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 62,
                "column": 106,
                "nodeType": "BinaryExpression",
                "source": "                        String((radlCoverage[chartIdentfier].growthPotentialMap['Retain']).indexOf(':')) == -1?"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 72,
                "column": 109,
                "nodeType": "BinaryExpression",
                "source": "                        String((radlCoverage[chartIdentfier].totalCoverageMap['Light Touch']).indexOf(':')) == -1?"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 76,
                "column": 109,
                "nodeType": "BinaryExpression",
                "source": "                         String((radlCoverage[chartIdentfier].currentSalesMap['Light Touch']).indexOf(':')) == -1?"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 80,
                "column": 111,
                "nodeType": "BinaryExpression",
                "source": "                        String((radlCoverage[chartIdentfier].growthPotentialMap['Light Touch']).indexOf(':')) == -1?"
            },
            {
                "ruleId": "no-shadow",
                "severity": 2,
                "message": "'data' is already declared in the upper scope.",
                "line": 160,
                "column": 34,
                "nodeType": "Identifier",
                "source": "    label: function(tooltipItem, data) {"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 161,
                "column": 1,
                "nodeType": "MemberExpression",
                "source": "console.log('*************'+data.labels[tooltipItem.index])"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 164,
                "column": 7,
                "nodeType": "MemberExpression",
                "source": "      console.log('Data-------dataset Label'+dataset.label+'dataset'+data.labels[tooltipItem.index]);"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'dataVar' is already defined",
                "line": 169,
                "column": 13,
                "nodeType": "Identifier",
                "source": "        var dataVar = [];"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 170,
                "column": 43,
                "nodeType": "BinaryExpression",
                "source": "        if(data.labels[tooltipItem.index] == 'Current Sales'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 171,
                "column": 118,
                "nodeType": "BinaryExpression",
                "source": "                          unit =  [String((radlCoverage[chartIdentfier].currentSalesMap[dataset.label]).indexOf(':') != -1 ) ? "
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 182,
                "column": 64,
                "nodeType": "BinaryExpression",
                "source": "                        else if(data.labels[tooltipItem.index] == '# Accounts'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 183,
                "column": 119,
                "nodeType": "BinaryExpression",
                "source": "                            unit = String((radlCoverage[chartIdentfier].totalCoverageMap[dataset.label]).indexOf(':') != -1 ) ? "
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_SelectedProgramList\\Frontier_SelectedProgramListController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 5,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('isInitialize'+component.get(\"v.isInitialize\"));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 6,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('component.get(\"v.programList\")'+component.get(\"v.programList\"));"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 16,
                "column": 25,
                "nodeType": "BinaryExpression",
                "source": "        if(event.target != undefined){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 21,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log('clicked from child'+event.target.id);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 25,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log('Last Event from Child'+event.getParam(\"programId\"));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 49,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('cmpName' + cmpName);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 50,
                "column": 20,
                "nodeType": "BinaryExpression",
                "source": "        if(cmpName == 'ProgramList'){"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_SelectedProgramList\\Frontier_SelectedProgramListHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 4,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Inside helper Pagination' +totalRecords);"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_SelectedProgramList\\Frontier_SelectedProgramListRenderer.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 7,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('After render child'+cmp.get(\"v.progId\"));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 8,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('After render child Id'+document.getElementById(cmp.get(\"v.progId\")));"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_Slider\\Frontier_SliderController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 3,
                "column": 10,
                "nodeType": "MemberExpression",
                "source": "         console.log('Target'+event.currentTarget.id);"
            },
            {
                "ruleId": "radix",
                "severity": 2,
                "message": "Missing radix parameter.",
                "line": 5,
                "column": 18,
                "nodeType": "CallExpression",
                "source": "         var n = parseInt(idVar.split('_')[1]);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 14,
                "column": 10,
                "nodeType": "MemberExpression",
                "source": "         console.log('VarId' + VarId);"
            },
            {
                "ruleId": "radix",
                "severity": 2,
                "message": "Missing radix parameter.",
                "line": 15,
                "column": 18,
                "nodeType": "CallExpression",
                "source": "         var n = parseInt(VarId.split('_')[1]);"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_Slider\\Frontier_SliderHelper.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_Slider\\Frontier_SliderRenderer.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_SliderApp\\Frontier_SliderAppHelper.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_SVG\\Frontier_SVGController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_SvgIcon_Sorting\\Frontier_SvgIcon_SortingController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_SvgIcon_Sorting\\Frontier_SvgIcon_SortingHelper.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_SvgIcon_Sorting\\Frontier_SvgIcon_SortingRenderer.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_TestGrowerAccount_FarmSize\\Frontier_TestGrowerAccount_FarmSizeController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 17,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('event.target.id' + event.target.id);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 18,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('prevfiscalId' + prevfiscalId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 19,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('prevId' + prevId);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 20,
                "column": 45,
                "nodeType": "BinaryExpression",
                "source": "        if(prevId === '' && event.target.id == 'hectares'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 24,
                "column": 19,
                "nodeType": "BinaryExpression",
                "source": "        if(prevId != '' && prevId != event.target.id && (event.target.id === 'acres' || event.target.id === 'hectares')){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 24,
                "column": 35,
                "nodeType": "BinaryExpression",
                "source": "        if(prevId != '' && prevId != event.target.id && (event.target.id === 'acres' || event.target.id === 'hectares')){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 28,
                "column": 25,
                "nodeType": "BinaryExpression",
                "source": "        if(prevfiscalId == '' && event.target.id == 'FY15'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 28,
                "column": 50,
                "nodeType": "BinaryExpression",
                "source": "        if(prevfiscalId == '' && event.target.id == 'FY15'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 32,
                "column": 25,
                "nodeType": "BinaryExpression",
                "source": "        if(prevfiscalId != '' && prevfiscalId != event.target.id && (event.target.id == 'FY16' || event.target.id == 'FY15')){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 32,
                "column": 47,
                "nodeType": "BinaryExpression",
                "source": "        if(prevfiscalId != '' && prevfiscalId != event.target.id && (event.target.id == 'FY16' || event.target.id == 'FY15')){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 32,
                "column": 86,
                "nodeType": "BinaryExpression",
                "source": "        if(prevfiscalId != '' && prevfiscalId != event.target.id && (event.target.id == 'FY16' || event.target.id == 'FY15')){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 32,
                "column": 115,
                "nodeType": "BinaryExpression",
                "source": "        if(prevfiscalId != '' && prevfiscalId != event.target.id && (event.target.id == 'FY16' || event.target.id == 'FY15')){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 41,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log('Inside uom' + uom);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 43,
                "column": 24,
                "nodeType": "BinaryExpression",
                "source": "        else if(prevId != '' && (event.target.id === 'acres' || event.target.id === 'hectares')){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 45,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log('Inside uom 1' + uom);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 47,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "            else if(prevId != '' && (event.target.id === 'FY15' || event.target.id ==='FY16')){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 54,
                "column": 30,
                "nodeType": "BinaryExpression",
                "source": "        else if(prevfiscalId != '' && (prevfiscalId != event.target.id) && (event.target.id === 'FY15' || event.target.id ==='FY16')){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 54,
                "column": 53,
                "nodeType": "BinaryExpression",
                "source": "        else if(prevfiscalId != '' && (prevfiscalId != event.target.id) && (event.target.id === 'FY15' || event.target.id ==='FY16')){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 57,
                "column": 34,
                "nodeType": "BinaryExpression",
                "source": "            else if(prevfiscalId != '' && (event.target.id === 'acres' || event.target.id === 'hectares')){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 73,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('fiscalyr' + fiscalyr + ' '+ 'uom' + uom);"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_TestGrowerAccount_FarmSize\\Frontier_TestGrowerAccount_FarmSizeHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 12,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"Error msg\" , errorMsg);"
            },
            {
                "ruleId": "no-shadow",
                "severity": 2,
                "message": "'data' is already declared in the upper scope.",
                "line": 49,
                "column": 51,
                "nodeType": "Identifier",
                "source": "                    label : function(tooltipItem, data) {"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'data' is already defined",
                "line": 52,
                "column": 29,
                "nodeType": "Identifier",
                "source": "                        var data = data.datasets[0].data[tooltipItem.index]+'%';"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 53,
                "column": 25,
                "nodeType": "MemberExpression",
                "source": "                        console.log(label.substring(label.indexOf(\"|\")+1,label.indexOf(\":\")));"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_TestGrowerAccount_FarmSize\\Frontier_TestGrowerAccount_FarmSizeRenderer.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_Touch_Plng_Pgm\\Frontier_Touch_Plng_PgmController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 45,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('controlPick' + controlPick);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 63,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "            if(controlPick != previousValue){"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_Touch_Plng_Pgm\\Frontier_Touch_Plng_PgmHelper.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_Touch_Plng_Pgm\\Frontier_Touch_Plng_PgmRenderer.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_Touchpoint_Planning_Calender\\Frontier_Touchpoint_Planning_CalenderController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_Touchpoint_Planning_Calender\\Frontier_Touchpoint_Planning_CalenderHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 57,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('touchPointList=>'+JSON.stringify(touchPointList));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 76,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "               \tconsole.log(\"StartDate!!!\" + startDate);"
            },
            {
                "ruleId": "no-shadow",
                "severity": 2,
                "message": "'event' is already declared in the upper scope.",
                "line": 130,
                "column": 35,
                "nodeType": "Identifier",
                "source": "            eventRender: function(event, element, view) {"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 140,
                "column": 36,
                "nodeType": "BinaryExpression",
                "source": "        var targetelement=(filetype==\"js\")? \"script\" : (filetype==\"css\")? \"link\" : \"none\" //determine element type to create nodelist from"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 140,
                "column": 65,
                "nodeType": "BinaryExpression",
                "source": "        var targetelement=(filetype==\"js\")? \"script\" : (filetype==\"css\")? \"link\" : \"none\" //determine element type to create nodelist from"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 141,
                "column": 33,
                "nodeType": "BinaryExpression",
                "source": "        var targetattr=(filetype==\"js\")? \"src\" : (filetype==\"css\")? \"href\" : \"none\" //determine corresponding attribute to test for"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 141,
                "column": 59,
                "nodeType": "BinaryExpression",
                "source": "        var targetattr=(filetype==\"js\")? \"src\" : (filetype==\"css\")? \"href\" : \"none\" //determine corresponding attribute to test for"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 144,
                "column": 141,
                "nodeType": "BinaryExpression",
                "source": "            if (allsuspects[i] && allsuspects[i].getAttribute(targetattr)!=null && allsuspects[i].getAttribute(targetattr).indexOf(filename)!=-1)"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_Touchpoint_Planning_Calender\\Frontier_Touchpoint_Planning_CalenderRenderer.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_TouchpointbyTypeChart\\Frontier_TouchpointbyTypeChartController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_TouchpointbyTypeChart\\Frontier_TouchpointbyTypeChartHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 4,
                "column": 1,
                "nodeType": "MemberExpression",
                "source": "console.log('-----Touchpointchart-----' );"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 19,
                "column": 5,
                "nodeType": "MemberExpression",
                "source": "\t\t\t\tconsole.log('Success');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 23,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('type' + component.get(\"v.touchtype\"));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 24,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('check value' + touchpointByVisit.totalTouchMap.hasOwnProperty('Retain'));"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 39,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Develop'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 42,
                "column": 29,
                "nodeType": "BinaryExpression",
                "source": "                     if(key == 'Acquire'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 45,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Retain'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 49,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Light Touch'){"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'key' is already defined",
                "line": 65,
                "column": 25,
                "nodeType": "Identifier",
                "source": "                for(var key in touchpointByVisit.emailTouchMap){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 66,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Develop'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 69,
                "column": 29,
                "nodeType": "BinaryExpression",
                "source": "                     if(key == 'Acquire'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 72,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Retain'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 75,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Light Touch'){"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'key' is already defined",
                "line": 91,
                "column": 26,
                "nodeType": "Identifier",
                "source": "                 for(var key in touchpointByVisit.visitTouchMap){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 92,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Develop'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 95,
                "column": 29,
                "nodeType": "BinaryExpression",
                "source": "                     if(key == 'Acquire'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 98,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Retain'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 101,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Light Touch'){"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'key' is already defined",
                "line": 118,
                "column": 25,
                "nodeType": "Identifier",
                "source": "                for(var key in touchpointByVisit.chatTouchMap){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 119,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Develop'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 122,
                "column": 29,
                "nodeType": "BinaryExpression",
                "source": "                     if(key == 'Acquire'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 125,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Retain'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 128,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Light Touch'){"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'key' is already defined",
                "line": 144,
                "column": 25,
                "nodeType": "Identifier",
                "source": "                for(var key in touchpointByVisit.callTouchMap){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 145,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Develop'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 148,
                "column": 29,
                "nodeType": "BinaryExpression",
                "source": "                     if(key == 'Acquire'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 151,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Retain'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 154,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Light Touch'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 165,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Errors', response.getError());"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_TouchpointChild\\Frontier_TouchpointChildController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 8,
                "column": 10,
                "nodeType": "MemberExpression",
                "source": "         console.log(\"Taskssssssssssss Map=====================>\"+Tmap);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 9,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"keyyyyyyyyyyyy=====================>\"+key);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 12,
                "column": 21,
                "nodeType": "BinaryExpression",
                "source": "            if(key1 == key){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 21,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"Taskssssssssssss List=====================>\"+ JSON.stringify(tasklist));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 30,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log(tasklist[i][j].Program_SFID__r.Name);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 46,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Program Name' +component.get(\"v.Programs\")+component.get(\"v.ProgramActivities\")+component.get(\"v.TouchpointDate\"));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 47,
                "column": 5,
                "nodeType": "MemberExpression",
                "source": "\t   console.log('Program Name------' +component.get(\"v.TouchpointStatus\")+component.get(\"v.TouchpointType\"));"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_TouchpointChild\\Frontier_TouchpointChildHelper.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_TouchPointRecord\\Frontier_TouchPointRecordController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 9,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('accId=>'+component.get(\"v.accId\"));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 21,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log('**************'+component.get(\"v.accId\"));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 46,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(accountId);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 50,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('Page Refresh');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_TouchPointRecord\\Frontier_TouchPointRecordHelper.js",
        "result": [
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 11,
                "column": 89,
                "nodeType": "BinaryExpression",
                "source": "        if( $A.localizationService.isBefore(startDateTime,endDateTime) && startDateTime != endDateTime) {"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 14,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log('Timezone based Error'+startDateTime+'End date'+endDateTime);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 54,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"followDate\" + followDate1);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 55,
                "column": 25,
                "nodeType": "BinaryExpression",
                "source": "         if(followDate1 == ''){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 56,
                "column": 14,
                "nodeType": "MemberExpression",
                "source": "             console.log(\"Inside null\");"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_TouchPointRecord\\Frontier_TouchPointRecordRenderer.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_touchPointRecordApp\\Frontier_touchPointRecordAppController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_TouchpointsbyMonth_Chart\\Frontier_TouchpointsbyMonth_ChartController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 13,
                "column": 8,
                "nodeType": "MemberExpression",
                "source": "       console.log('Inside Controller' + touchpointType);"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_TouchpointsbyMonth_Chart\\Frontier_TouchpointsbyMonth_ChartHelper.js",
        "result": [
            {
                "ruleId": null,
                "fatal": true,
                "severity": 2,
                "source": "            legend: {",
                "message": "Parsing error: Redefinition of property",
                "line": 151,
                "column": 13
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_Truncatetext\\Frontier_TruncatetextController.js",
        "result": [
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 21,
                "column": 47,
                "nodeType": "BinaryExpression",
                "source": "        if((component.get(\"v.identifyEvtList\")) == 'frmEvntList'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 23,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log('fullString' + fullString);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 25,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log( 'subString' + subString);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 30,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log(subString + 'subString');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 39,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log('fullString' + fullString);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 41,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log( 'subString' + subString);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 46,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log(subString + 'subString');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_Truncatetext\\Frontier_TruncatetextHelper.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_User_LoginReport\\Frontier_User_LoginReportController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 14,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"Page direction\" + page);"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_User_LoginReport\\Frontier_User_LoginReportHelper.js",
        "result": [
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'page' is already defined",
                "line": 4,
                "column": 13,
                "nodeType": "Identifier",
                "source": "        var page = page || 1;"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 6,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(pageSize + 'pageSize');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 7,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(page + 'page');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 40,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Response=>'+response.getReturnValue());"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 45,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log(logDetailJson[0].Count + 'Total');"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 61,
                "column": 46,
                "nodeType": "BinaryExpression",
                "source": "                else if(logDetailJson.length == 0){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 76,
                "column": 25,
                "nodeType": "MemberExpression",
                "source": "                        console.log(\"Error message: \"+errors[0].message);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 79,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log(\"Unknown error\");"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 86,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"Inside showPop\" + message);        "
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 91,
                "column": 32,
                "nodeType": "MemberExpression",
                "source": "                               console.log('pop');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 97,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"Month Selected=>\"+component.get(\"v.selectedMonthOrCountry\"));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 110,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Response Sort=>'+response.getReturnValue());"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 112,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log(logDetailJson[0].Count + 'Total');"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '!==' and instead saw '!='.",
                "line": 120,
                "column": 50,
                "nodeType": "BinaryExpression",
                "source": "                            if(countrySorting[1] != ''){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 133,
                "column": 46,
                "nodeType": "BinaryExpression",
                "source": "                else if(logDetailJson.length == 0){"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_VisitListReport\\Frontier_VisitListReportController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 12,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"Page direction\" + page);"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_VisitListReport\\Frontier_VisitListReportHelper.js",
        "result": [
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'page' is already defined",
                "line": 4,
                "column": 13,
                "nodeType": "Identifier",
                "source": "        var page = page || 1;"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 6,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(pageSize + 'pageSize');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 7,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(page + 'page');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 13,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('sortByRADL' + sortByRADL);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 14,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('sortByMonth' + sortByMonth);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 32,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Response=>'+response.getReturnValue().length);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 35,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('parsed json'+visitDetailJson.length)"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 37,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log(visitDetailJson[0].Count + 'Total');"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 43,
                "column": 48,
                "nodeType": "BinaryExpression",
                "source": "                else if(visitDetailJson.length == 0){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 59,
                "column": 25,
                "nodeType": "MemberExpression",
                "source": "                        console.log(\"Error message: \"+errors[0].message);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 62,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log(\"Unknown error\");"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 69,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"Inside showPop\" + message);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 75,
                "column": 32,
                "nodeType": "MemberExpression",
                "source": "                               console.log('pop');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_VisitListReport\\Frontier_VisitListReportRenderer.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_VisitReport\\Frontier_VisitReportController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_VisitReport\\Frontier_VisitReportHelper.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Frontier_VisitReport\\Frontier_VisitReportRenderer.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 3,
                "column": 8,
                "nodeType": "MemberExpression",
                "source": "       console.log('rerender');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\FrontierApp\\FrontierAppController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\FrontierApp\\FrontierAppHelper.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\FrontierSalesOrderDashboard\\FrontierSalesOrderDashboardController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\FrontierSalesOrderDashboard\\FrontierSalesOrderDashboardHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 4,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log(JSON.stringify(component.get(\"v.SalesDetailResponse\")));"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\FrontierSalesOrderDashboard\\FrontierSalesOrderDashboardRenderer.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\GenerateDyanamicAuraId\\GenerateDyanamicAuraIdController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 4,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log(\"uniqueAuraId:\" + uniqueId);"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\GenerateDyanamicAuraId\\GenerateDyanamicAuraIdHelper.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\GenerateDyanamicAuraId\\GenerateDyanamicAuraIdRenderer.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\MultiPickList\\MultiPickListController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 3,
                "column": 3,
                "nodeType": "MemberExpression",
                "source": "\t\tconsole.log(\"Inside controller\");"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\MultiPickList\\MultiPickListHelper.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\MultiSelect\\MultiSelectController.js",
        "result": [
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 40,
                "column": 33,
                "nodeType": "BinaryExpression",
                "source": "              if (element.value == value) {"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 41,
                "column": 47,
                "nodeType": "BinaryExpression",
                "source": "                  element.selected = selected == \"true\" ? false : true;"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\MultiSelect\\MultiSelectHelper.js",
        "result": [
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 4,
                "column": 23,
                "nodeType": "BinaryExpression",
                "source": "    if (values.length == 0) {"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 7,
                "column": 23,
                "nodeType": "BinaryExpression",
                "source": "    if (values.length == 1) {"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Paginator\\PaginatorController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\svgIcon\\svgIconController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\svgIcon\\svgIconHelper.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\svgIcon\\svgIconRenderer.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\tab\\tabController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\tab\\tabHelper.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\tab\\tabRenderer.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\tabs\\tabsController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 9,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.warn(\"doAction: \", component, event, helper);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 10,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.warn(\"params: \", event.getParams());"
            },
            {
                "ruleId": "radix",
                "severity": 2,
                "message": "Missing radix parameter.",
                "line": 14,
                "column": 20,
                "nodeType": "CallExpression",
                "source": "        tabindex = parseInt(tabindex);"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\tabs\\tabsHelper.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\tabs\\tabsRenderer.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Test_Calendar_Using_JQ\\Test_Calendar_Using_JQController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 16,
                "column": 7,
                "nodeType": "MemberExpression",
                "source": "      console.log(\"I ma in lightining...\");  "
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Test_Calendar_Using_JQ\\Test_Calendar_Using_JQHelper.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\Test1\\Test1Controller.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\TestAccountRadlchart\\TestAccountRadlchartController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\TestAccountRadlchart\\TestAccountRadlchartHelper.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\TestReviewChart\\TestReviewChartController.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 13,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('page---' +page);"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\TestReviewChart\\TestReviewChartHelper.js",
        "result": [
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'page' is already defined",
                "line": 5,
                "column": 13,
                "nodeType": "Identifier",
                "source": "        var page = page || 1;"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 14,
                "column": 22,
                "nodeType": "BinaryExpression",
                "source": "            if(state == 'SUCCESS'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 20,
                "column": 13,
                "nodeType": "MemberExpression",
                "source": "            console.log('programList' + programList);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 26,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Error');"
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\TestReviewChartchild\\TestReviewChartchildController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\TestReviewChartchild\\TestReviewChartchildHelper.js",
        "result": [
            {
                "ruleId": null,
                "fatal": true,
                "severity": 2,
                "source": "\t\t\t\tChart.helpers.each(self.data.datasets.forEach((dataset, datasetIndex) => {",
                "message": "Parsing error: Parenthesized pattern",
                "line": 56,
                "column": 51
            }
        ]
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\TestStackedandUnstacked\\TestStackedandUnstackedController.js",
        "result": []
    },
    {
        "file": "C:\\Monsanto Global FT\\DevSE01 backup\\src\\aura\\TestStackedandUnstacked\\TestStackedandUnstackedHelper.js",
        "result": [
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 4,
                "column": 9,
                "nodeType": "MemberExpression",
                "source": "        console.log('-----Acccount coverage chart-----' );"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 14,
                "column": 5,
                "nodeType": "MemberExpression",
                "source": "\t\t\t\tconsole.log('Success');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 19,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('type' + component.get(\"v.accCoverageLbl\"));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 22,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Develop');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 26,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Retain');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 30,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Retain');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 32,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside retain 0' + retainAccCount);"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 35,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Retain');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 40,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('key' + key );"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 42,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Develop'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 45,
                "column": 29,
                "nodeType": "BinaryExpression",
                "source": "                     if(key == 'Acquire'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 48,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Retain'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 50,
                "column": 25,
                "nodeType": "MemberExpression",
                "source": "                        console.log('Inside retain' + retainAccCount);"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 53,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Light Touch'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 58,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Develop');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 62,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Retain');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 66,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Retain');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 70,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Retain');"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'key' is already defined",
                "line": 73,
                "column": 25,
                "nodeType": "Identifier",
                "source": "                for(var key in accCoverageRADL.accPgmRadlMap){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 74,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('key' + key );"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 75,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Develop'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 78,
                "column": 29,
                "nodeType": "BinaryExpression",
                "source": "                     if(key == 'Acquire'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 81,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Retain'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 84,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Light Touch'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 89,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Develop');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 93,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Retain');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 97,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Retain');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 101,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Retain');"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'key' is already defined",
                "line": 104,
                "column": 26,
                "nodeType": "Identifier",
                "source": "                 for(var key in accCoverageRADL.accTouchRadlMap){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 105,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('key' + key );"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 106,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Develop'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 109,
                "column": 29,
                "nodeType": "BinaryExpression",
                "source": "                     if(key == 'Acquire'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 112,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Retain'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 115,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Light Touch'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 120,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Develop');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 124,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Retain');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 128,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Retain');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 132,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Retain');"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'key' is already defined",
                "line": 135,
                "column": 25,
                "nodeType": "Identifier",
                "source": "                for(var key in accCoverageRADL.TouchpointcountRadlMap){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 136,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('key' + key );"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 137,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Develop'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 140,
                "column": 29,
                "nodeType": "BinaryExpression",
                "source": "                     if(key == 'Acquire'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 143,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Retain'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 146,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Light Touch'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 151,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Develop');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 155,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Retain');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 159,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Retain');"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 163,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('Inside Retain');"
            },
            {
                "ruleId": "no-redeclare",
                "severity": 2,
                "message": "'key' is already defined",
                "line": 166,
                "column": 25,
                "nodeType": "Identifier",
                "source": "                for(var key in accCoverageRADL.avgVisitRadlMap){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 167,
                "column": 21,
                "nodeType": "MemberExpression",
                "source": "                    console.log('key' + key );"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 168,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Develop'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 171,
                "column": 29,
                "nodeType": "BinaryExpression",
                "source": "                     if(key == 'Acquire'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 174,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Retain'){"
            },
            {
                "ruleId": "eqeqeq",
                "severity": 2,
                "message": "Expected '===' and instead saw '=='.",
                "line": 177,
                "column": 28,
                "nodeType": "BinaryExpression",
                "source": "                    if(key == 'Light Touch'){"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 185,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('D' + component.get(\"v.dtypecount\"));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 186,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('A' + component.get(\"v.acqtypecount\"));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 187,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('R' + component.get(\"v.rtypecount\"));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 188,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('L' + component.get(\"v.ltypecount\"));"
            },
            {
                "ruleId": "no-console",
                "severity": 2,
                "message": "Unexpected console statement.",
                "line": 192,
                "column": 17,
                "nodeType": "MemberExpression",
                "source": "                console.log('Errors', response.getError());"
            }
        ]
    }
]
